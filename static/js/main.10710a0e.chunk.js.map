{"version":3,"sources":["ui/02_auth/registration/Registration.module.scss","ui/01_app/Header/Header.module.scss","ui/06_common/Theme/Theme.module.scss","ui/06_common/c1-SuperInputText/SuperInputText.module.scss","ui/06_common/c3-SuperCheckbox/SuperCheckbox.module.scss","ui/01_app/App/App.module.scss","ui/06_common/c2-SuperButton/SuperButton.module.scss","ui/02_auth/login/Login.module.scss","bll/reducers/login-reducer.ts","ui/06_common/c1-SuperInputText/SuperInputText.tsx","ui/06_common/c2-SuperButton/SuperButton.tsx","ui/06_common/c3-SuperCheckbox/SuperCheckbox.tsx","bll/reducers/app-reducer.ts","dal/LoginAPI.ts","ui/02_auth/login/Login.tsx","ui/02_auth/login/LoginContainer.tsx","ui/04_profile/ProfileContainer.tsx","ui/test/Test.tsx","ui/02_auth/registration/Registration.tsx","ui/02_auth/registration/RegistrationContainer.tsx","ui/06_common/error404/Error404.tsx","ui/02_auth/newPassword/NewPasswordContainer.tsx","ui/02_auth/passwordRecovery/PasswordRecoveryContainer.tsx","ui/03_packs/packs/PacksContainer.tsx","ui/03_packs/Cards/Cards.tsx","ui/05_routes/Routes.tsx","ui/01_app/Header/Header.tsx","ui/06_common/Theme/Theme.tsx","ui/01_app/App/App.tsx","bll/reducers/registration-reducer.ts","utils/hooks/useTheme.tsx","reportWebVitals.ts","bll/store.ts","index.tsx"],"names":["module","exports","LOGIN","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","className","theme","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","dark","light","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SET_STATUS","SET_ERROR","SET_INITIALIZED","initialState","status","initialized","setAppStatusAC","instance","axios","create","baseURL","withCredentials","authAPI","parameters","post","isLoggedIn","profile","loginTC","data","dispatch","then","res","SET_IS_LOGGED_IN","SET_USER_PROFILE","console","log","catch","rej","response","finally","Login","serverError","useState","disable","setDisable","useDispatch","formik","useFormik","initialValues","email","password","confirmPassword","validate","values","errors","Object","keys","length","onSubmit","resetForm","style","loginWrapper","loginTitle","loginBox","handleSubmit","loginInner","placeholder","getFieldProps","touched","loginCheckboxInner","htmlFor","loginLabel","id","disabled","link","to","PATH","RECOVERY_PASSWORD","REGISTRATION","LoginContainer","useSelector","state","login","app","PROFILE","ProfileContainer","Test","Registration","alert","JSON","stringify","regWrapper","regTitle","regSubTitle","regBox","regInner","RegistrationContainer","registration","isRegistration","Error404","NewPasswordContainer","PasswordRecoveryContainer","PacksContainer","Cards","ERROR_404","NEW_PASSWORD","TEST","PACKS","CARDS","Routes","path","exact","render","Header","navBox","navList","navItem","activeClassName","selected","Theme","toggleTheme","btnBox","onClick","switcherBtn","emoji","App","setTheme","useEffect","localTheme","localStorage","getItem","setItem","useTheme","container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","ADD_NEW_USER","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10710a0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"regWrapper\":\"Registration_regWrapper__2G4xI\",\"regBox\":\"Registration_regBox__21zCG\",\"regInner\":\"Registration_regInner__w5sP4\",\"regTitle\":\"Registration_regTitle__2x3rK\",\"regSubTitle\":\"Registration_regSubTitle__1Vv3_\",\"error\":\"Registration_error__34sZp\",\"link\":\"Registration_link__3RPkv\",\"dark\":\"Registration_dark__2gdmy\",\"light\":\"Registration_light__2_S1T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBox\":\"Header_navBox__1Zp3P\",\"navList\":\"Header_navList___cY6W\",\"navItem\":\"Header_navItem__krW8c\",\"link\":\"Header_link__2gyFV\",\"selected\":\"Header_selected__3FvRc\",\"dark\":\"Header_dark__2LRtT\",\"light\":\"Header_light__1_Jye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switcherBtn\":\"Theme_switcherBtn__ygAPK\",\"dark\":\"Theme_dark__1wYNU\",\"light\":\"Theme_light__15bll\",\"emoji\":\"Theme_emoji__31DGd\",\"btnBox\":\"Theme_btnBox__3GWWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1pt1r\",\"dark\":\"SuperInputText_dark__3SgRZ\",\"light\":\"SuperInputText_light__1QI5s\",\"errorInput\":\"SuperInputText_errorInput__36R50\",\"error\":\"SuperInputText_error__VSKlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClassName\":\"SuperCheckbox_spanClassName__1LNW5\",\"check\":\"SuperCheckbox_check__31jrR\",\"checkbox\":\"SuperCheckbox_checkbox__22YVf\",\"dark\":\"SuperCheckbox_dark__aD32l\",\"light\":\"SuperCheckbox_light__1i1LY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3V4O1\",\"container\":\"App_container__1DJFg\",\"dark\":\"App_dark__2EM65\",\"light\":\"App_light__1Ie9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3JbaB\",\"dark\":\"SuperButton_dark__3wEGX\",\"light\":\"SuperButton_light__20g5N\",\"classname\":\"SuperButton_classname__vnq3c\",\"red\":\"SuperButton_red__3MBya\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__3x5er\",\"loginBox\":\"Login_loginBox__17mDl\",\"loginInner\":\"Login_loginInner__281qS\",\"loginCheckboxInner\":\"Login_loginCheckboxInner__3mFfO\",\"loginLabel\":\"Login_loginLabel__2k98A\",\"loginTitle\":\"Login_loginTitle__2dbVm\",\"error\":\"Login_error__2OIb7\",\"link\":\"Login_link__2OaPM\",\"dark\":\"Login_dark__5mq0D\",\"light\":\"Login_light__Ia-i3\"};","import {Dispatch} from 'redux'\nimport {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from './app-reducer';\nimport {authAPI, LoginParamsType} from '../../dal/LoginAPI';\nimport {ProfileType} from './profile-reducer';\n\n\nenum LOGIN {\n\tSET_IS_LOGGED_IN = 'SET_IS_LOGGED_IN',\n SET_USER_PROFILE = 'SET_USER_PROFILE',\n}\n\nconst initialState: InitialStateType = {\n\tisLoggedIn: false,\n\tprofile: null\n}\n\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase LOGIN.SET_IS_LOGGED_IN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: action.value\n\t\t\t}\n\t\tcase LOGIN.SET_USER_PROFILE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprofile: action.profile\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n// actions\nexport const setIsLoggedInAC = (value: boolean) => ({type: LOGIN.SET_IS_LOGGED_IN, value} as const)\nexport const setUserProfileAC = (profile: ProfileType) => ({type: LOGIN.SET_USER_PROFILE, profile} as const)\n\n\n\n//thunks\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\n\tdispatch(setAppStatusAC('loading'))\n\n\tauthAPI.login(data)\n\t\t.then(res => {\n\t\t\tdispatch(setIsLoggedInAC(true))\n\t\t\tdispatch(setUserProfileAC(res.data))\n\t\t\tconsole.log(res.data)\n\t\t})\n\t\t.catch(rej => {\n\t\t\tdispatch(setAppErrorAC(rej.response.data.error))\n\t\t})\n\t\t.finally(() => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n}\n\nexport const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\n\n}\n\n\ntype InitialStateType = {\n\tisLoggedIn: boolean\n\tprofile: null | ProfileType\n}\ntype ActionsType = ReturnType<typeof setIsLoggedInAC>\n\t| SetAppStatusActionType\n\t| SetAppErrorActionType\n\t|  ReturnType<typeof setUserProfileAC>\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.scss\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n\tonChangeText?: (value: string) => void\n\ttype?: string\n\tonEnter?: () => void\n\terror?: string | null | boolean\n\tspanClassName?: string\n\ttheme?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n\t{\n\t\ttype, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n\t\tonChange, onChangeText,\n\t\tonKeyPress, onEnter,\n\t\terror,\n\t\tclassName, spanClassName,\n\t\ttheme,\n\t\t...restProps// все остальные пропсы попадут в объект restProps\n\t}\n) => {\n\tconst onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tonChange // если есть пропс onChange\n\t\t&& onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n\t\tonChangeText && onChangeText(e.currentTarget.value);\n\t}\n\tconst onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tonKeyPress && onKeyPress(e);\n\n\t\te.key === \"Enter\" // если нажата кнопка Enter\n\t\t&& onEnter // и есть пропс onEnter\n\t\t&& onEnter(); // то вызвать его\n\t}\n\n\tconst finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n\tconst finalInputClassName = `${error ? s.errorInput : s.superInput} ${theme === 'dark' ? s.dark : s.light}`\n\n\n\treturn (\n\t\t<>\n\t\t\t<input\n\t\t\t\ttype={type ? type : 'text'}\n\t\t\t\tonChange={onChangeCallback}\n\t\t\t\tonKeyPress={onKeyPressCallback}\n\t\t\t\tclassName={finalInputClassName}\n\n\t\t\t\t{...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n\t\t\t/>\n\t\t\t{error && <span className={finalSpanClassName}>{'Please, type something..'}</span>}\n\t\t</>\n\t);\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\nimport s from './SuperButton.module.scss';\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n\tred?: boolean\n\ttheme?: string\n\tclassName?: string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n\t{\n\t\ttheme,\n\t\tred, className,\n\t\t...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n\t}\n) => {\n\tconst finalClassName = `${red ? s.red : s.default} ${theme == 'dark' ? s.dark : s.light} ${className}`;\n\treturn (\n\t\t<button\n\t\t\tclassName={finalClassName}\n\t\t\t{...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n\t\t/>\n\t);\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\nimport s from './SuperCheckbox.module.scss';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n\tonChangeChecked?: (checked: boolean) => void\n\tspanClassName?: string\n\ttheme?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n\t{\n\t\ttheme,\n\t\ttype, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n\t\tonChange, onChangeChecked,\n\t\tclassName, spanClassName,\n\t\tchildren, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n\t\t...restProps// все остальные пропсы попадут в объект restProps\n\t}\n) => {\n\tconst onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n\t\t// сделайте так чтоб работал onChange и onChangeChecked\n\t\tonChange && onChange(e);\n\n\t\tonChangeChecked && onChangeChecked(e.currentTarget.checked)\n\n\t}\n\n\tconst finalInputClassName = `${s.checkbox} ${className ? className : ''} ${theme === 'dark' ? s.dark : s.light}`\n\n\treturn (\n\t\t<label className={s.label}>\n\t\t\t<input\n\t\t\t\ttype={'checkbox'}\n\t\t\t\tonChange={onChangeCallback}\n\t\t\t\tclassName={finalInputClassName}\n\n\t\t\t\t{...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n\t\t\t/>\n\t\t\t{children && <span className={s.spanClassName}>{children}</span>}\n\t\t</label> // благодаря label нажатие на спан передастся в инпут\n\t);\n}\n\nexport default SuperCheckbox;\n","import {Dispatch} from \"redux\";\n\nconst SET_STATUS = 'APP/SET-STATUS';\nconst SET_ERROR = 'APP/SET_ERROR';\nconst SET_INITIALIZED = 'APP/SET_INITIALIZED';\n\nconst initialState: InitialStateType = {\n    status: 'idle',\n    error: null,\n    initialized: false\n}\n\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case SET_STATUS:\n            return {...state, status: action.status}\n        case SET_ERROR:\n            return {...state, error: action.error}\n        case SET_INITIALIZED:\n            return {...state, initialized: action.initialized}\n        default:\n            return state\n    }\n}\n\n\n\n\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: SET_STATUS, status} as const)\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\n\nexport const setAppErrorAC = (error: RequestErrorType) => ({type: SET_ERROR, error} as const)\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\n\n\nexport const initializedSuccessAC = (value: boolean) => {\n    return {type: SET_INITIALIZED, value} as const\n}\n\nexport const initializeAppTC = () => (dispatch: Dispatch<ActionsType>) => {\n\n}\n\n\n\n\n\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\nexport type RequestErrorType = string | null\n\ntype InitialStateType = {\n    status: RequestStatusType,\n    error: RequestErrorType,\n    initialized: boolean\n}\n\ntype ActionsType = any\n","import axios from 'axios'\n\n\nexport const instance = axios.create({\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\n\t// baseURL: 'http://localhost:7542/2.0/',\n\twithCredentials: true,\n\n})\n\n//api\nexport const authAPI = {\n\tlogin(parameters: LoginParamsType) {\n\t\treturn instance.post<ProfileType>('auth/login', parameters)\n\t},\n\tlogout() {\n\t\treturn instance.delete('auth/me')\n\t}\n}\n\nexport type ProfileType = {\n\t_id: string\n\temail: string\n\tname: string\n\tavatar: string\n\tpublicCardPacksCount: number\n\tcreated: string\n\tupdated: string\n\tisAdmin: boolean\n\tverified: boolean\n\trememberMe: boolean\n\terror: string\n}\n\n//type\nexport type LoginParamsType = {\n\temail: string\n\tpassword: string\n\trememberMe?: boolean\n}\n","import React, {FC, useState} from 'react';\nimport style from './Login.module.scss'\nimport SuperInputText from '../../06_common/c1-SuperInputText/SuperInputText';\nimport SuperButton from '../../06_common/c2-SuperButton/SuperButton';\nimport {useFormik} from 'formik';\nimport SuperCheckbox from '../../06_common/c3-SuperCheckbox/SuperCheckbox';\nimport {RequestErrorType, RequestStatusType} from '../../../bll/reducers/app-reducer';\nimport { NavLink } from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport {loginTC} from '../../../bll/reducers/login-reducer';\nimport {useDispatch} from 'react-redux';\n\n\ntype LoginPropsType = {\n\ttheme?: string\n\tstatus: RequestStatusType\n\tserverError: RequestErrorType\n}\n\n\ntype  FormikErrorType = {\n\temail?: string\n\tpassword?: string\n\trememberMe?: boolean\n}\n\nexport const Login: FC<LoginPropsType> = ({theme, serverError,status}) => {\n\tconst [disable, setDisable] = useState<boolean>(true)\n\tconst dispatch = useDispatch()\n\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: ''\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormikErrorType = {}\n\t\t\tif (!values.email) {\n\t\t\t\terrors.email = 'Email is required';\n\t\t\t}\n\t\t\tif (!values.password) {\n\t\t\t\terrors.password = 'Password is required';\n\t\t\t}\n\n\t\t\tif (formik.errors.email || formik.errors.password) {\n\t\t\t\tif (Object.keys(errors).length === 0) {\n\t\t\t\t\tsetDisable(false)\n\t\t\t\t} else {\n\t\t\t\t\tsetDisable(true)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tdispatch(loginTC(values))\n\t\t\t// alert(JSON.stringify(values));\n\t\t\tsetDisable(true)\n\t\t\tformik.resetForm()\n\t\t},\n\t})\n\n\n\treturn (\n\t\t<div className={style.loginWrapper}>\n\t\t\t<h1 className={style.loginTitle}>Sign in</h1>\n\t\t\t<form className={style.loginBox} onSubmit={formik.handleSubmit}>\n\t\t\t\t<div className={style.loginInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='e-mail' type=\"email\"  {...formik.getFieldProps('email')}/>\n\t\t\t\t\t{formik.touched.email && formik.errors.email\n\t\t\t\t\t\t? (<div className={style.error}>{formik.errors.email}</div>)\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className={style.loginInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='password' type=\"password\" {...formik.getFieldProps('password')}/>\n\t\t\t\t\t{formik.touched.password && formik.errors.password\n\t\t\t\t\t\t? <div className={style.error}>{formik.errors.password}</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className={style.loginCheckboxInner}>\n\t\t\t\t\t<label htmlFor='rememberMe' className={style.loginLabel}>Remember me</label>\n\t\t\t\t\t<SuperCheckbox theme={theme}\n\t\t\t\t\t\tid=\"rememberMe\"\n\t\t\t\t\t\ttype=\"rememberMe\"\n\t\t\t\t\t\t{...formik.getFieldProps('rememberMe')}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<SuperButton theme={theme} disabled={disable}>Sign in</SuperButton>\n\t\t\t</form>\n\t\t\t{serverError ? <div className={style.error}>{serverError}</div> : null}\n\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`} to={PATH.RECOVERY_PASSWORD}>Forgot your password?</NavLink>\n\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`} to={PATH.REGISTRATION}>Go to sign up</NavLink>\n\t\t</div>\n\t);\n}\n","import React, {FC} from 'react';\nimport {Login} from './Login';\nimport {useSelector} from 'react-redux';\nimport {AppRootState} from '../../../bll/store';\nimport {RequestErrorType, RequestStatusType} from '../../../bll/reducers/app-reducer';\nimport {Redirect} from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\n\ntype LoginContainerPropsType = {\n  theme?: string\n}\n\nexport const LoginContainer: FC<LoginContainerPropsType> = ({theme}) => {\n  const isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\n  const status = useSelector<AppRootState, RequestStatusType>(state => state.app.status)\n  const serverError = useSelector<AppRootState, RequestErrorType>(state => state.app.error)\n\n\n  if (isLoggedIn) {\n    return <Redirect to={PATH.PROFILE}/>\n  }\n\n\n\n    return (\n     <>\n         <Login theme={theme} status={status} serverError={serverError}/>\n     </>\n\n    );\n}\n","import React from 'react';\n\n\n\nexport const ProfileContainer = () => {\n\n\n\n    return (\n\n        <div>\n            ProfileContainer\n        </div>\n    );\n}\n","import React from 'react';\n\n\nexport const Test = () => {\n\n\n\treturn (\n\t\t<div>\n\n\t\t</div>\n\t);\n}\n","import React, {FC, useState} from 'react';\nimport style from './Registration.module.scss';\nimport SuperInputText from '../../06_common/c1-SuperInputText/SuperInputText';\nimport SuperButton from '../../06_common/c2-SuperButton/SuperButton';\nimport {useFormik} from 'formik';\nimport {NavLink} from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport {RequestErrorType, RequestStatusType} from '../../../bll/reducers/app-reducer';\n\n\ntype RegistrationPropsType = {\n\ttheme?: string\n\tstatus: RequestStatusType\n\tserverError: RequestErrorType\n}\n\ntype  FormikErrorType = {\n\temail?: string\n\tpassword?: string\n\tconfirmPassword?: string\n}\n\nexport const Registration: FC<RegistrationPropsType> = ({theme, status, serverError}) => {\n\n\tconst [disable, setDisable] = useState<boolean>(false)\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: ''\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormikErrorType = {}\n\t\t\tif (!values.email) {\n\t\t\t\terrors.email = 'Email is required';\n\t\t\t}\n\t\t\tif (!values.password) {\n\t\t\t\terrors.password = 'Password is required';\n\t\t\t}\n\t\t\tif (!values.confirmPassword) {\n\t\t\t\terrors.confirmPassword = 'Password is required';\n\t\t\t}\n\t\t\tif (values.password !== values.confirmPassword) {\n\t\t\t\terrors.confirmPassword = 'Passwords are not equal';\n\t\t\t}\n\t\t\tif (formik.errors.email || formik.errors.password || formik.errors.confirmPassword) {\n\t\t\t\tif (Object.keys(errors).length === 0) {\n\t\t\t\t\tsetDisable(false)\n\t\t\t\t} else {\n\t\t\t\t\tsetDisable(true)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\talert(JSON.stringify(values));\n\t\t\tsetDisable(true)\n\t\t\tformik.resetForm()\n\t\t},\n\t})\n\n\n\treturn (\n\t\t<div className={style.regWrapper}>\n\t\t\t<h1 className={style.regTitle}>Sign up</h1>\n\t\t\t<p className={style.regSubTitle}>Please fill in the form below</p>\n\t\t\t<form className={style.regBox} onSubmit={formik.handleSubmit}>\n\t\t\t\t<div className={style.regInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='e-mail' type=\"email\"  {...formik.getFieldProps('email')}/>\n\t\t\t\t\t{formik.touched.email && formik.errors.email\n\t\t\t\t\t\t? (<div className={style.error}>{formik.errors.email}</div>)\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className={style.regInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='password' type=\"password\" {...formik.getFieldProps('password')}/>\n\t\t\t\t\t{formik.touched.password && formik.errors.password\n\t\t\t\t\t\t? <div className={style.error}>{formik.errors.password}</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className={style.regInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='confirm password'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\" {...formik.getFieldProps('confirmPassword')}/>\n\t\t\t\t\t{formik.touched.confirmPassword && formik.errors.confirmPassword\n\t\t\t\t\t\t? <div className={style.error}>{formik.errors.confirmPassword}</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<SuperButton theme={theme}\n\t\t\t\t\t\t\t\t\t\t disabled={disable}>Sign up</SuperButton>\n\t\t\t</form>\n\n\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`} to={PATH.LOGIN}>Go to sign in</NavLink>\n\t\t</div>\n\t);\n}\n\n","import React, {FC} from 'react';\nimport {Registration} from './Registration';\nimport {Redirect} from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport {useSelector} from 'react-redux';\nimport {AppRootState} from '../../../bll/store';\nimport {RequestErrorType, RequestStatusType} from '../../../bll/reducers/app-reducer';\n\n\ntype RegistrationContainerPropsType = {\n\ttheme?: string\n}\n\nexport const RegistrationContainer: FC<RegistrationContainerPropsType> = ({theme}) => {\n\tconst status = useSelector<AppRootState, RequestStatusType>(state => state.app.status)\n\tconst serverError = useSelector<AppRootState, RequestErrorType>(state => state.app.error)\n\tconst isRegistration = useSelector<AppRootState, boolean>(state => state.registration.isRegistration)\n\n\tif (isRegistration) {\n\t\treturn <Redirect to={PATH.LOGIN}/>\n\t}\n\n\treturn (\n\t\t<Registration\n\t\t\tserverError={serverError}\n\t\t\tstatus={status}\n\t\t\ttheme={theme}\n\t\t/>\n\t)\n};","import React from 'react';\n\n\nexport const Error404 = () => {\n  return (\n    <div>\n        Error404\n    </div>\n  );\n}\n","import React from 'react';\nimport {NewPassword} from \"./NewPassword\";\nimport {useSelector} from 'react-redux';\n// import {AppRootState} from '../../bll/store';\n// import {RequestStatusType} from '../../bll/recoveryPassword-reducer';\n\nexport const NewPasswordContainer = () => {\n  // const error = useSelector<AppRootState, string>((state) => state.recoveryPassword.error)\n  // const success = useSelector<AppRootState, string>((state) => state.recoveryPassword.success)\n  // const status = useSelector<AppRootState, RequestStatusType>((state) => state.recoveryPassword.status)\n\n  return (\n    <div>\n      {/*<NewPassword error={error} success={success} status={status}/>*/}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport const PasswordRecoveryContainer = () => {\n\n  return (\n    <div>\n      PasswordRecoveryContainer\n    </div>\n  );\n}\n","import React from 'react';\n\n\nexport const PacksContainer = () => {\n\n\n\n\treturn (\n\t\t<div>\n\t\t\tPacksContainer\n\t\t</div>\n\t)\n}\n\n","import React from 'react';\n\nexport const Cards = () => {\n\n\treturn (\n\t\t<>\n\t\t\tcards\n\t\t</>\n\t)\n}","import React, {FC} from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {LoginContainer} from '../02_auth/login/LoginContainer';\nimport {ProfileContainer} from '../04_profile/ProfileContainer';\nimport {Test} from '../test/Test';\nimport {RegistrationContainer} from '../02_auth/registration/RegistrationContainer';\nimport {Error404} from '../06_common/error404/Error404';\nimport {NewPasswordContainer} from '../02_auth/newPassword/NewPasswordContainer';\nimport {PasswordRecoveryContainer} from '../02_auth/passwordRecovery/PasswordRecoveryContainer';\nimport {PacksContainer} from '../03_packs/packs/PacksContainer';\nimport {Cards} from '../03_packs/Cards/Cards';\n\nexport const PATH = {\n\tLOGIN: '/login',\n\tREGISTRATION: '/registration',\n\tPROFILE: '/profile',\n\tERROR_404: '/404',\n\tRECOVERY_PASSWORD: '/recovery_pass',\n\tNEW_PASSWORD: '/new_pass',\n\tTEST: '/test',\n\tPACKS: '/packs',\n\tCARDS: '/cards'\n}\n\ntype RoutesPropsType = {\n\ttheme?: string\n}\n\nexport const Routes: FC<RoutesPropsType> = ({theme}) => {\n\treturn (\n\t\t<div>\n\t\t\t<Switch>\n\t\t\t\t<Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\n\t\t\t\t<Route path={PATH.LOGIN} render={() => <LoginContainer theme={theme}/>}/>\n\t\t\t\t<Route path={PATH.REGISTRATION} render={() => <RegistrationContainer theme={theme}/>}/>\n\t\t\t\t<Route path={PATH.PROFILE} render={() => <ProfileContainer/>}/>\n\t\t\t\t<Route path={PATH.ERROR_404} render={() => <Error404/>}/>\n\t\t\t\t<Route path={PATH.RECOVERY_PASSWORD} render={() => <PasswordRecoveryContainer/>}/>\n\t\t\t\t<Route path={PATH.NEW_PASSWORD} render={() => <NewPasswordContainer/>}/>\n\t\t\t\t<Route path={PATH.TEST} render={() => <Test/>}/>\n\t\t\t\t<Route path={PATH.PACKS} render={() => <PacksContainer/>}/>\n\t\t\t\t<Route path={PATH.CARDS + `/:id`} render={() => <Cards/>}/>\n\t\t\t\t<Route render={() => <Error404/>}/>\n\t\t\t</Switch>\n\t\t</div>\n\t)\n}\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport style from './Header.module.scss'\n\ntype MenuType = {\n\ttheme?: string\n}\n\nexport const Header: React.FC<MenuType> = ({theme}) => {\n\n\n\treturn (\n\t\t<nav className={style.navBox}>\n\t\t\t<ul className={style.navList}>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink activeClassName={style.selected}\n\t\t\t\t\t\t\t\t\t className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t to={PATH.REGISTRATION}>Registration</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.LOGIN}>Login</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.PROFILE}>Profile</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.RECOVERY_PASSWORD}>Recovery Password</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.NEW_PASSWORD}>New Password</NavLink>\n\t\t\t\t</li>\n\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.PACKS}>Packs</NavLink>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t{/*<div className={style.navItem}>*/}\n\t\t\t{/*    <NavLink className={style.link} to={PATH.CARDS}>Cards</NavLink>*/}\n\t\t\t{/*</div>*/}\n\t\t</nav>\n\t)\n}\n","import React, {FC} from 'react';\nimport SuperButton from '../c2-SuperButton/SuperButton';\nimport s from './Theme.module.scss';\n\ntype ThemePropsType = {\n\ttheme: string\n\ttoggleTheme: () => void\n}\n\nexport const Theme: FC<ThemePropsType> = ({theme, toggleTheme}) => {\n\treturn (\n\t\t<div className={s.btnBox}>\n\t\t\t<SuperButton onClick={toggleTheme}\n\t\t\t\t\t\t\t\t\t className={`${s.switcherBtn} ${theme === 'dark' ? s.dark : s.light}`}>{theme === 'dark' ?\n\t\t\t\t<span className={s.emoji}>&#127770;</span> : <span className={s.emoji}>&#127773;</span>}</SuperButton>\n\t\t</div>\n\t)\n}","import React from 'react';\nimport s from './App.module.scss';\nimport useTheme from '../../../utils/hooks/useTheme';\nimport {Header} from '../Header/Header';\nimport {Theme} from '../../06_common/Theme/Theme';\nimport {Routes} from '../../05_routes/Routes';\n\nfunction App() {\n\tconst {theme, toggleTheme} = useTheme();\n\n\n\treturn (\n\t\t<div className={`${s.app} ${theme === 'dark' ? s.dark : s.light}`}>\n\t\t\t<div className={s.container}>\n\t\t\t\t<Theme theme={theme} toggleTheme={toggleTheme}/>\n\t\t\t\t<Header theme={theme}/>\n\t\t\t\t<Routes theme={theme}/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import {Dispatch} from \"redux\";\n\nenum Registration {\n    ADD_NEW_USER = 'addNewUserAC',\n}\n\n\nconst initialState: InitialStateType = {\n    isRegistration: false\n}\n\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case Registration.ADD_NEW_USER:\n            return {\n               ...state,\n                isRegistration: action.isRegistration\n            }\n        default:\n            return state\n    }\n}\n\n// actions\nexport const addUserAC = (isRegistration: boolean) =>({type: Registration.ADD_NEW_USER, isRegistration} as const)\n\n//thunks\nexport const registrationTC = () => (dispatch: Dispatch<ActionsType>) => {\n\n}\n\n\nexport type ActionsType = ReturnType<typeof addUserAC>\n\n\n\ntype InitialStateType = {\n    isRegistration: boolean\n}","import { useEffect, useState } from \"react\";\n\nexport default () => {\n\tconst [theme, setTheme] = useState(\"light\");\n\tconst toggleTheme = () => {\n\t\tif (theme !== \"dark\") {\n\t\t\tlocalStorage.setItem(\"theme\", \"dark\");\n\t\t\tsetTheme(\"dark\");\n\t\t} else {\n\t\t\tlocalStorage.setItem(\"theme\", \"light\");\n\t\t\tsetTheme(\"light\");\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst localTheme = localStorage.getItem(\"theme\");\n\t\tif (localTheme) {\n\t\t\tsetTheme(localTheme);\n\t\t}\n\t}, []);\n\n\treturn {\n\t\ttheme,\n\t\ttoggleTheme\n\t};\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {registrationReducer} from './reducers/registration-reducer';\nimport {appReducer} from './reducers/app-reducer';\nimport {loginReducer} from './reducers/login-reducer';\n\n\n\nconst rootReducer = combineReducers({\n\tapp: appReducer,\n\tregistration: registrationReducer,\n\tlogin: loginReducer\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\n\nexport type AppRootState = ReturnType<typeof rootReducer> //автомачически подтягивает типы из combineReducers\n\n// @ts-ignore\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/01_app/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './bll/store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App/>\n\t\t\t</Provider>\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
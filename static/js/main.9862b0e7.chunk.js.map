{"version":3,"sources":["ui/02_auth/login/Login.module.scss","ui/06_common/Theme/Theme.module.scss","ui/06_common/c1-SuperInputText/SuperInputText.module.scss","ui/06_common/c3-SuperCheckbox/SuperCheckbox.module.scss","ui/01_app/App/App.module.scss","ui/01_app/Header/Header.module.scss","ui/06_common/c2-SuperButton/SuperButton.module.scss","ui/02_auth/passwordRecovery/PasswordRecovery.module.scss","ui/04_profile/Profile.module.css","bll/reducers/app-reducer.ts","ui/06_common/c1-SuperInputText/SuperInputText.tsx","ui/06_common/c2-SuperButton/SuperButton.tsx","ui/06_common/c3-SuperCheckbox/SuperCheckbox.tsx","bll/reducers/login-reducer.ts","dal/LoginAPI.ts","bll/reducers/registration-reducer.ts","ui/02_auth/login/Login.tsx","ui/06_common/Loader/Loader.tsx","ui/02_auth/login/LoginContainer.tsx","ui/04_profile/Profile.tsx","ui/04_profile/ProfileContainer.tsx","ui/test/Test.tsx","dal/RegistrationAPI.ts","bll/reducers/recoveryPassword-reducer.ts","ui/02_auth/registration/Registration.tsx","ui/02_auth/registration/RegistrationContainer.tsx","ui/06_common/error404/Error404.tsx","ui/02_auth/newPassword/NewPasswordContainer.tsx","dal/PasswordRecoveryAPI.ts","ui/02_auth/passwordRecovery/PasswordRecovery.tsx","ui/02_auth/passwordRecovery/PasswordRecoveryContainer.tsx","ui/03_packs/packs/PacksContainer.tsx","ui/03_packs/Cards/Cards.tsx","ui/05_routes/Routes.tsx","ui/01_app/Header/Header.tsx","ui/06_common/Theme/Theme.tsx","ui/01_app/App/App.tsx","utils/hooks/useTheme.tsx","reportWebVitals.ts","bll/store.ts","index.tsx","ui/02_auth/registration/Registration.module.scss"],"names":["module","exports","APP","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","className","theme","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","dark","light","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","LOGIN","initialState","status","initialized","setAppStatusAC","SET_STATUS","instance","axios","create","baseURL","withCredentials","authAPI","parameters","post","Registration","isLoggedIn","profile","loginError","loginTC","data","dispatch","then","res","SET_IS_LOGGED_IN","SET_USER_PROFILE","console","log","catch","err","response","message","SIGN_IN_ERROR","signInErrorAC","finally","Login","useState","disable","setDisable","useDispatch","formik","useFormik","initialValues","email","password","confirmPassword","validate","values","errors","Object","keys","length","onSubmit","resetForm","style","loginWrapper","loginTitle","loginBox","handleSubmit","loginInner","placeholder","getFieldProps","touched","loginCheckboxInner","htmlFor","loginLabel","id","disabled","link","to","PATH","RECOVERY_PASSWORD","REGISTRATION","Loader","LoginContainer","useSelector","state","login","app","PROFILE","Profile","props","wrap","ProfileContainer","Test","registrationAPI","isRegistration","registrationError","RECOVERY","signUpTC","SIGN_UP","SIGN_UP_ERROR","signUpServerErrorAC","regWrapper","regTitle","regSubTitle","regError","regBox","regInner","RegistrationContainer","registration","Error404","NewPasswordContainer","passwordRecoveryAPI","from","recoveryError","recoverySuccess","sendEmailTC","info","SET_SUCCESS","SET_ERROR","setErrorAC","PasswordRecovery","box","recTitle","recSubTitle","recError","PasswordRecoveryContainer","recoveryPass","PacksContainer","Cards","ERROR_404","NEW_PASSWORD","TEST","PACKS","CARDS","Routes","path","exact","render","Header","navBox","navList","navItem","activeClassName","selected","Theme","toggleTheme","btnBox","onClick","switcherBtn","emoji","App","setTheme","useEffect","localTheme","localStorage","getItem","setItem","useTheme","container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","SET_INITIALIZED","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9862b0e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__3x5er\",\"loginBox\":\"Login_loginBox__17mDl\",\"loginInner\":\"Login_loginInner__281qS\",\"loginCheckboxInner\":\"Login_loginCheckboxInner__3mFfO\",\"loginLabel\":\"Login_loginLabel__2k98A\",\"loginTitle\":\"Login_loginTitle__2dbVm\",\"error\":\"Login_error__2OIb7\",\"link\":\"Login_link__2OaPM\",\"dark\":\"Login_dark__5mq0D\",\"light\":\"Login_light__Ia-i3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switcherBtn\":\"Theme_switcherBtn__ygAPK\",\"dark\":\"Theme_dark__1wYNU\",\"light\":\"Theme_light__15bll\",\"emoji\":\"Theme_emoji__31DGd\",\"btnBox\":\"Theme_btnBox__3GWWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1pt1r\",\"dark\":\"SuperInputText_dark__3SgRZ\",\"light\":\"SuperInputText_light__1QI5s\",\"errorInput\":\"SuperInputText_errorInput__36R50\",\"error\":\"SuperInputText_error__VSKlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClassName\":\"SuperCheckbox_spanClassName__1LNW5\",\"check\":\"SuperCheckbox_check__31jrR\",\"checkbox\":\"SuperCheckbox_checkbox__22YVf\",\"dark\":\"SuperCheckbox_dark__aD32l\",\"light\":\"SuperCheckbox_light__1i1LY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3V4O1\",\"container\":\"App_container__1DJFg\",\"dark\":\"App_dark__2EM65\",\"light\":\"App_light__1Ie9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBox\":\"Header_navBox__1Zp3P\",\"navList\":\"Header_navList___cY6W\",\"navItem\":\"Header_navItem__krW8c\",\"link\":\"Header_link__2gyFV\",\"selected\":\"Header_selected__3FvRc\",\"dark\":\"Header_dark__2LRtT\",\"light\":\"Header_light__1_Jye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3JbaB\",\"dark\":\"SuperButton_dark__3wEGX\",\"light\":\"SuperButton_light__20g5N\",\"classname\":\"SuperButton_classname__vnq3c\",\"red\":\"SuperButton_red__3MBya\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"PasswordRecovery_box__1QI4d\",\"recTitle\":\"PasswordRecovery_recTitle__1wHQK\",\"recSubTitle\":\"PasswordRecovery_recSubTitle__22ZYx\",\"recError\":\"PasswordRecovery_recError__2XOs5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Profile_wrap__3x57u\",\"link\":\"Profile_link__3laUM\"};","import {Dispatch} from 'redux';\n\n\nenum APP {\n\tSET_STATUS = 'SET-STATUS',\n\tSET_ERROR = 'SET_ERROR',\n\tSET_INITIALIZED = 'SET_INITIALIZED'\n}\n\nconst initialState: InitialStateType = {\n\tstatus: 'idle',\n\terror: null,\n\tinitialized: false\n}\n\ntype InitialStateType = {\n\tstatus: RequestStatusType,\n\terror: RequestErrorType,\n\tinitialized: boolean\n}\n\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase APP.SET_STATUS:\n\t\t\treturn {...state, status: action.status}\n\t\t// case APP.SET_ERROR:\n\t\t// \treturn {...state, error: action.error}\n\t\tcase APP.SET_INITIALIZED:\n\t\t\treturn {...state, initialized: action.initialized}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: APP.SET_STATUS, status} as const)\n// export const setAppErrorAC = (error: RequestErrorType) => ({type: APP.SET_ERROR, error} as const)\nexport const setAppInitialedAC = (initialized: boolean) => ({type: APP.SET_INITIALIZED, initialized} as const)\n\n\nexport const initializedSuccessAC = (value: boolean) => {\n\treturn {type: APP.SET_INITIALIZED, value} as const\n}\n\nexport const initializeAppTC = () => (dispatch: Dispatch<ActionsType>) => {\n\n}\n\n\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\nexport type RequestErrorType = string | null\n\n\ntype ActionsType = ReturnType<typeof setAppStatusAC>\n\t// | ReturnType<typeof setAppErrorAC>\n\t| ReturnType<typeof setAppInitialedAC>\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.scss\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n\tonChangeText?: (value: string) => void\n\ttype?: string\n\tonEnter?: () => void\n\terror?: string | null | boolean\n\tspanClassName?: string\n\ttheme?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n\t{\n\t\ttype, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n\t\tonChange, onChangeText,\n\t\tonKeyPress, onEnter,\n\t\terror,\n\t\tclassName, spanClassName,\n\t\ttheme,\n\t\t...restProps// все остальные пропсы попадут в объект restProps\n\t}\n) => {\n\tconst onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tonChange // если есть пропс onChange\n\t\t&& onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n\t\tonChangeText && onChangeText(e.currentTarget.value);\n\t}\n\tconst onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tonKeyPress && onKeyPress(e);\n\n\t\te.key === \"Enter\" // если нажата кнопка Enter\n\t\t&& onEnter // и есть пропс onEnter\n\t\t&& onEnter(); // то вызвать его\n\t}\n\n\tconst finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n\tconst finalInputClassName = `${error ? s.errorInput : s.superInput} ${theme === 'dark' ? s.dark : s.light}`\n\n\n\treturn (\n\t\t<>\n\t\t\t<input\n\t\t\t\ttype={type ? type : 'text'}\n\t\t\t\tonChange={onChangeCallback}\n\t\t\t\tonKeyPress={onKeyPressCallback}\n\t\t\t\tclassName={finalInputClassName}\n\n\t\t\t\t{...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n\t\t\t/>\n\t\t\t{error && <span className={finalSpanClassName}>{'Please, type something..'}</span>}\n\t\t</>\n\t);\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\nimport s from './SuperButton.module.scss';\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n\tred?: boolean\n\ttheme?: string\n\tclassName?: string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n\t{\n\t\ttheme,\n\t\tred, className,\n\t\t...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n\t}\n) => {\n\tconst finalClassName = `${red ? s.red : s.default} ${theme == 'dark' ? s.dark : s.light} ${className}`;\n\treturn (\n\t\t<button\n\t\t\tclassName={finalClassName}\n\t\t\t{...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n\t\t/>\n\t);\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\nimport s from './SuperCheckbox.module.scss';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n\tonChangeChecked?: (checked: boolean) => void\n\tspanClassName?: string\n\ttheme?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n\t{\n\t\ttheme,\n\t\ttype, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n\t\tonChange, onChangeChecked,\n\t\tclassName, spanClassName,\n\t\tchildren, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n\t\t...restProps// все остальные пропсы попадут в объект restProps\n\t}\n) => {\n\tconst onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n\t\t// сделайте так чтоб работал onChange и onChangeChecked\n\t\tonChange && onChange(e);\n\n\t\tonChangeChecked && onChangeChecked(e.currentTarget.checked)\n\n\t}\n\n\tconst finalInputClassName = `${s.checkbox} ${className ? className : ''} ${theme === 'dark' ? s.dark : s.light}`\n\n\treturn (\n\t\t<label className={s.label}>\n\t\t\t<input\n\t\t\t\ttype={'checkbox'}\n\t\t\t\tonChange={onChangeCallback}\n\t\t\t\tclassName={finalInputClassName}\n\n\t\t\t\t{...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n\t\t\t/>\n\t\t\t{children && <span className={s.spanClassName}>{children}</span>}\n\t\t</label> // благодаря label нажатие на спан передастся в инпут\n\t);\n}\n\nexport default SuperCheckbox;\n","import {Dispatch} from 'redux'\nimport {setAppStatusAC} from './app-reducer';\nimport {authAPI, LoginParamsType} from '../../dal/LoginAPI';\nimport {ProfileType} from './profile-reducer';\n\n\nenum LOGIN {\n\tSET_IS_LOGGED_IN = 'SET_IS_LOGGED_IN',\n\tSET_USER_PROFILE = 'SET_USER_PROFILE',\n\tSIGN_IN_ERROR = 'SIGN_IN_ERROR'\n}\n\nconst initialState: InitialStateType = {\n\tisLoggedIn: false,\n\tprofile: null,\n\tloginError: null\n}\n\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase LOGIN.SET_IS_LOGGED_IN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: action.value\n\t\t\t}\n\t\tcase LOGIN.SET_USER_PROFILE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprofile: action.profile\n\t\t\t}\n\t\tcase LOGIN.SIGN_IN_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloginError: action.error\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n// actions\nexport const setIsLoggedInAC = (value: boolean) => ({type: LOGIN.SET_IS_LOGGED_IN, value} as const)\nexport const setUserProfileAC = (profile: ProfileType) => ({type: LOGIN.SET_USER_PROFILE, profile} as const)\nexport const signInErrorAC = (error: string) => ({type: LOGIN.SIGN_IN_ERROR, error} as const)\n\n\n//thunks\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\n\tdispatch(setAppStatusAC('loading'))\n\n\tauthAPI.login(data)\n\t\t.then(res => {\n\t\t\tdispatch(setIsLoggedInAC(true))\n\t\t\tdispatch(setUserProfileAC(res.data))\n\t\t\tconsole.log(res.data)\n\t\t})\n\t\t.catch(err => {\n\t\t\tconst error = err.response\n\t\t\t\t? err.response.data.error\n\t\t\t\t: (err.message + ', more details in the console');\n\t\t\tconsole.log(error)\n\t\t\tdispatch(signInErrorAC(error))\n\t\t})\n\t\t.finally(() => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n}\n\nexport const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\n\n}\n\n\ntype InitialStateType = {\n\tisLoggedIn: boolean\n\tprofile: null | ProfileType\n\tloginError: null | string\n}\ntype ActionsType =\n\tReturnType<typeof setIsLoggedInAC>\n\t| ReturnType<typeof setUserProfileAC>\n\t| ReturnType<typeof setAppStatusAC>\n\t| ReturnType<typeof signInErrorAC>\n","import axios from 'axios'\n\n\nexport const instance = axios.create({\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\n\t// baseURL: 'http://localhost:7542/2.0/',\n\twithCredentials: true,\n\n})\n\n//api\nexport const authAPI = {\n\tlogin(parameters: LoginParamsType) {\n\t\treturn instance.post<ProfileType>('auth/login', parameters)\n\t},\n\tlogout() {\n\t\treturn instance.delete('auth/me')\n\t}\n}\n\nexport type ProfileType = {\n\t_id: string\n\temail: string\n\tname: string\n\tavatar: string\n\tpublicCardPacksCount: number\n\tcreated: string\n\tupdated: string\n\tisAdmin: boolean\n\tverified: boolean\n\trememberMe: boolean\n\terror: string\n}\n\n//type\nexport type LoginParamsType = {\n\temail: string\n\tpassword: string\n\trememberMe?: boolean\n}\n","import {Dispatch} from 'redux';\nimport {setAppStatusAC} from './app-reducer';\nimport {registrationAPI, SignUpType} from '../../dal/RegistrationAPI';\n\nenum Registration {\n\tSIGN_UP = 'SIGN_UP',\n\tSIGN_UP_ERROR = 'SIGN_UP_ERROR',\n}\n\nconst initialState: InitialStateType = {\n\tisRegistration: false,\n\tregistrationError: null\n}\n\nconsole.log(initialState.registrationError, 'initialState.registrationError')\n\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase Registration.SIGN_UP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisRegistration: action.isRegistration\n\t\t\t}\n\t\tcase Registration.SIGN_UP_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tregistrationError: action.error\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n// actions\nexport const signUpAC = (isRegistration: boolean) => ({type: Registration.SIGN_UP, isRegistration} as const)\nexport const signUpServerErrorAC = (error: string | null) => ({type: Registration.SIGN_UP_ERROR, error} as const)\n\n//thunks\nexport const signUpTC = (data: SignUpType) => (dispatch: Dispatch<ActionsType>) => {\n\tdispatch(setAppStatusAC('loading'))\n\tregistrationAPI.signUp(data)\n\t\t.then((res) => {\n\t\t\tdispatch(signUpAC(true))\n\t\t\tconsole.log(res)\n\t\t})\n\t\t.catch(err => {\n\t\t\tconst error = err.response\n\t\t\t\t? err.response.data.error\n\t\t\t\t: (err.message + ', more details in the console');\n\t\t\tconsole.log(error)\n\t\t\tdispatch(signUpServerErrorAC(error))\n\t\t})\n\t\t.finally(() => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n}\n\nexport type ActionsType =\n\tReturnType<typeof signUpAC>\n\t| ReturnType<typeof setAppStatusAC>\n\t| ReturnType<typeof signUpServerErrorAC>\n\n\ntype InitialStateType = {\n\tisRegistration: boolean\n\tregistrationError: null | string\n}","import React, {FC, useState} from 'react';\nimport style from './Login.module.scss'\nimport SuperInputText from '../../06_common/c1-SuperInputText/SuperInputText';\nimport SuperButton from '../../06_common/c2-SuperButton/SuperButton';\nimport {useFormik} from 'formik';\nimport SuperCheckbox from '../../06_common/c3-SuperCheckbox/SuperCheckbox';\nimport {RequestErrorType, RequestStatusType} from '../../../bll/reducers/app-reducer';\nimport { NavLink } from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport {loginTC} from '../../../bll/reducers/login-reducer';\nimport {useDispatch} from 'react-redux';\n\n\ntype LoginPropsType = {\n\ttheme?: string\n\tstatus: RequestStatusType\n\tloginError: RequestErrorType\n}\n\n\ntype  FormikErrorType = {\n\temail?: string\n\tpassword?: string\n\trememberMe?: boolean\n}\n\nexport const Login: FC<LoginPropsType> = ({theme, loginError,status}) => {\n\tconst [disable, setDisable] = useState<boolean>(false)\n\tconst dispatch = useDispatch()\n\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: ''\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormikErrorType = {}\n\t\t\tif (!values.email) {\n\t\t\t\terrors.email = 'Email is required';\n\t\t\t}\n\t\t\tif (!values.password) {\n\t\t\t\terrors.password = 'Password is required';\n\t\t\t}\n\n\t\t\tif (formik.errors.email || formik.errors.password) {\n\t\t\t\tif (Object.keys(errors).length === 0) {\n\t\t\t\t\tsetDisable(false)\n\t\t\t\t} else {\n\t\t\t\t\tsetDisable(true)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tdispatch(loginTC(values))\n\t\t\t// alert(JSON.stringify(values));\n\t\t\tsetDisable(true)\n\t\t\tformik.resetForm()\n\t\t},\n\t})\n\n\n\treturn (\n\t\t<div className={style.loginWrapper}>\n\t\t\t<h1 className={style.loginTitle}>Sign in</h1>\n\t\t\t{loginError ? <div className={style.error}>{loginError}</div> : null}\n\t\t\t<form className={style.loginBox} onSubmit={formik.handleSubmit}>\n\t\t\t\t<div className={style.loginInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='e-mail' type=\"email\"  {...formik.getFieldProps('email')}/>\n\t\t\t\t\t{formik.touched.email && formik.errors.email\n\t\t\t\t\t\t? (<div className={style.error}>{formik.errors.email}</div>)\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className={style.loginInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='password' type=\"password\" {...formik.getFieldProps('password')}/>\n\t\t\t\t\t{formik.touched.password && formik.errors.password\n\t\t\t\t\t\t? <div className={style.error}>{formik.errors.password}</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className={style.loginCheckboxInner}>\n\t\t\t\t\t<label htmlFor='rememberMe' className={style.loginLabel}>Remember me</label>\n\t\t\t\t\t<SuperCheckbox theme={theme}\n\t\t\t\t\t\tid=\"rememberMe\"\n\t\t\t\t\t\ttype=\"rememberMe\"\n\t\t\t\t\t\t{...formik.getFieldProps('rememberMe')}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<SuperButton theme={theme} disabled={disable}>Sign in</SuperButton>\n\t\t\t</form>\n\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`} to={PATH.RECOVERY_PASSWORD}>Forgot your password?</NavLink>\n\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`} to={PATH.REGISTRATION}>Go to sign up</NavLink>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport './Loader.scss';\n\nconst Loader = () => {\n\n\treturn (\n\t\t<div className=\"lds-ellipsis\">\n\t\t\t<div></div>\n\t\t\t<div></div>\n\t\t\t<div></div>\n\t\t\t<div></div>\n\t\t</div>\n\t)\n}\n\nexport default Loader","import React, {FC} from 'react';\nimport {Login} from './Login';\nimport {useSelector} from 'react-redux';\nimport {AppRootState} from '../../../bll/store';\nimport {RequestErrorType, RequestStatusType} from '../../../bll/reducers/app-reducer';\nimport {Redirect} from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport Loader from '../../06_common/Loader/Loader';\n\ntype LoginContainerPropsType = {\n  theme?: string\n}\n\nexport const LoginContainer: FC<LoginContainerPropsType> = ({theme}) => {\n  const isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\n  const status = useSelector<AppRootState, RequestStatusType>(state => state.app.status)\n  const loginError = useSelector<AppRootState, RequestErrorType>(state => state.login.loginError)\n\n  if (isLoggedIn) return <Redirect to={PATH.PROFILE}/>\n\n  if (status === 'loading') {\n    return <Loader/>\n  }\n\n    return (\n     <>\n       <Login theme={theme} status={status} loginError={loginError}/>\n     </>\n\n    );\n}\n","import React from 'react';\nimport style from './Profile.module.css'\nimport {PATH} from \"../05_routes/Routes\";\nimport {NavLink} from \"react-router-dom\";\nimport Logout from \"../02_auth/logout/Logout\";\n\n\ntype ProfileType = {\n\n}\n\nexport const Profile = (props: ProfileType) => {\n\n\n    return (\n        <div>\n            <h2>Profile</h2>\n            <div className={style.wrap}>\n\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport {Profile} from './Profile';\nimport {Redirect} from 'react-router-dom';\nimport {PATH} from '../05_routes/Routes';\nimport {useSelector} from 'react-redux';\nimport {AppRootState} from '../../bll/store';\n\n\n\nexport const ProfileContainer = () => {\n  const isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\n  if (!isLoggedIn) {\n    return <Redirect to={PATH.LOGIN}/>\n  }\n\n    return (\n\n        <div>\n            <Profile />\n        </div>\n    );\n}\n","import React from 'react';\n\n\nexport const Test = () => {\n\n\n\treturn (\n\t\t<div>\n\n\t\t</div>\n\t);\n}\n","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\n\t// baseURL: 'http://localhost:7542/2.0/',\n\twithCredentials: true\n})\n\n\n//api\nexport const registrationAPI = {\n\tsignUp(parameters: SignUpType) {\n\t\treturn instance.post<SignUpType>('auth/register', parameters)\n\t}\n}\n\n//type\nexport type SignUpType = {\n\temail: string\n\tpassword: string\n}\n\n","import {Dispatch} from 'redux';\nimport {passwordRecoveryAPI} from '../../dal/PasswordRecoveryAPI';\n\nenum RECOVERY {\n\tSET_ERROR = 'SET_ERROR',\n\tSET_SUCCESS = 'SET_SUCCESS',\n\tSET_STATUS = 'SET_STATUS'\n}\n\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\n\ntype InitialStateType = {\n\tstatus: RequestStatusType\n\trecoveryError: string | null\n\trecoverySuccess: string\n}\n\nconst initialState: InitialStateType = {\n\tstatus: 'idle',\n\trecoveryError: '',\n\trecoverySuccess: ''\n}\n\nexport const recoveryPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase RECOVERY.SET_STATUS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: action.status\n\t\t\t}\n\t\tcase RECOVERY.SET_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trecoveryError: action.error\n\t\t\t}\n\t\tcase RECOVERY.SET_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trecoverySuccess: action.recoverySuccess\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n// actions\nexport const setErrorAC = (error: string) => ({type: RECOVERY.SET_ERROR, error} as const)\nexport const setSuccessAC = (recoverySuccess: string) => ({type: RECOVERY.SET_SUCCESS, recoverySuccess} as const)\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: RECOVERY.SET_STATUS, status} as const)\n\n//thunks\nexport const sendEmailTC = (email: string) => (dispatch: Dispatch) => {\n\tdispatch(setAppStatusAC('loading'))\n\tpasswordRecoveryAPI.sendEmail(email)\n\t\t.then(res => {\n\t\t\tconsole.log(res)\n\t\t\tif (res.status === 200) {\n\t\t\t\tdispatch(setSuccessAC(res.data.info))\n\t\t\t}\n\t\t})\n\t\t.catch(err => {\n\t\t\tconst error = err.response\n\t\t\t\t? err.response.data.error\n\t\t\t\t: (err.message + ', more details in the console')\n\t\t\tdispatch(setErrorAC(error))\n\t\t})\n\t\t.finally(() => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n}\n\n\ntype ActionsType = ReturnType<typeof setErrorAC>\n\t| ReturnType<typeof setSuccessAC>\n\t| ReturnType<typeof setAppStatusAC>","import React, {FC, useState} from 'react';\nimport style from './Registration.module.scss';\nimport SuperInputText from '../../06_common/c1-SuperInputText/SuperInputText';\nimport SuperButton from '../../06_common/c2-SuperButton/SuperButton';\nimport {useFormik} from 'formik';\nimport {NavLink} from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport {RequestErrorType, RequestStatusType} from '../../../bll/reducers/app-reducer';\nimport {useDispatch} from 'react-redux';\nimport {signUpTC} from '../../../bll/reducers/registration-reducer';\n\n\ntype RegistrationPropsType = {\n\ttheme?: string\n\tstatus: RequestStatusType\n\tregistrationError: RequestErrorType\n}\n\ntype  FormikErrorType = {\n\temail?: string\n\tpassword?: string\n\tconfirmPassword?: string\n}\n\nexport const Registration: FC<RegistrationPropsType> = ({theme, status, registrationError}) => {\n\tconst dispatch = useDispatch();\n\tconst [disable, setDisable] = useState<boolean>(false)\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: ''\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormikErrorType = {}\n\t\t\tif (!values.email) {\n\t\t\t\terrors.email = 'Email is required';\n\t\t\t}\n\t\t\tif (!values.password) {\n\t\t\t\terrors.password = 'Password is required';\n\t\t\t}\n\t\t\tif (!values.confirmPassword) {\n\t\t\t\terrors.confirmPassword = 'Password is required';\n\t\t\t}\n\t\t\tif (values.password !== values.confirmPassword) {\n\t\t\t\terrors.confirmPassword = 'Passwords are not equal';\n\t\t\t}\n\t\t\tif (formik.errors.email || formik.errors.password || formik.errors.confirmPassword) {\n\t\t\t\tif (Object.keys(errors).length === 0) {\n\t\t\t\t\tsetDisable(false)\n\t\t\t\t} else {\n\t\t\t\t\tsetDisable(true)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tdispatch(signUpTC(values))\n\t\t\t// alert(JSON.stringify(values));\n\t\t\tsetDisable(true)\n\t\t\tformik.resetForm()\n\t\t},\n\t})\n\n\n\treturn (\n\t\t<div className={style.regWrapper}>\n\t\t\t<h1 className={style.regTitle}>Sign up</h1>\n\t\t\t<p className={style.regSubTitle}>Please fill in the form below</p>\n\t\t\t{registrationError ? <div className={style.regError}>{registrationError}</div> : null}\n\t\t\t<form className={style.regBox} onSubmit={formik.handleSubmit}>\n\t\t\t\t<div className={style.regInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='e-mail' type=\"email\"  {...formik.getFieldProps('email')}/>\n\t\t\t\t\t{formik.touched.email && formik.errors.email\n\t\t\t\t\t\t? (<div className={style.error}>{formik.errors.email}</div>)\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className={style.regInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='password' type=\"password\" {...formik.getFieldProps('password')}/>\n\t\t\t\t\t{formik.touched.password && formik.errors.password\n\t\t\t\t\t\t? <div className={style.error}>{formik.errors.password}</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className={style.regInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='confirm password'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\" {...formik.getFieldProps('confirmPassword')}/>\n\t\t\t\t\t{formik.touched.confirmPassword && formik.errors.confirmPassword\n\t\t\t\t\t\t? <div className={style.error}>{formik.errors.confirmPassword}</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<SuperButton theme={theme}\n\t\t\t\t\t\t\t\t\t\t disabled={disable}>Sign up</SuperButton>\n\t\t\t</form>\n\n\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`} to={PATH.LOGIN}>Go to sign in</NavLink>\n\t\t</div>\n\t);\n}\n\n","import React, {FC} from 'react';\nimport {Registration} from './Registration';\nimport {Redirect} from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport {useSelector} from 'react-redux';\nimport {AppRootState} from '../../../bll/store';\nimport {RequestErrorType, RequestStatusType} from '../../../bll/reducers/app-reducer';\nimport Loader from '../../06_common/Loader/Loader';\n\n\ntype RegistrationContainerPropsType = {\n\ttheme?: string\n}\n\nexport const RegistrationContainer: FC<RegistrationContainerPropsType> = ({theme}) => {\n\tconst status = useSelector<AppRootState, RequestStatusType>(state => state.app.status)\n\tconst registrationError = useSelector<AppRootState, RequestErrorType>(state => state.registration.registrationError)\n\tconst isRegistration = useSelector<AppRootState, boolean>(state => state.registration.isRegistration)\n\n\tif (isRegistration) {\n\t\treturn <Redirect to={PATH.LOGIN}/>\n\t}\n\n\tif (status === 'loading') {\n\t\treturn <Loader/>\n\t}\n\n\tconsole.log(registrationError)\n\treturn (\n\t\t<Registration\n\t\t\tregistrationError={registrationError}\n\t\t\tstatus={status}\n\t\t\ttheme={theme}\n\t\t/>\n\t)\n};","import React from 'react';\n\n\nexport const Error404 = () => {\n  return (\n    <div>\n        Error404\n    </div>\n  );\n}\n","import React, {FC} from 'react';\n\n\ntype NewPasswordContainerPropsType = {\n  theme?: string\n}\n\nexport const NewPasswordContainer:FC<NewPasswordContainerPropsType> = ({theme}) => {\n\n\n  return (\n    <div>\n      {/*<NewPassword error={error} success={success} status={status}/>*/}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\n\t// baseURL: 'http://localhost:7542/2.0/',\n\twithCredentials: true\n})\n\n\nexport const passwordRecoveryAPI = {\n\tsendEmail(email: string) {\n\t\treturn instance.post('auth/forgot',\n\t\t\t{\n\t\t\t\temail: email,\n\t\t\t\tfrom: 'mariya.syrokvash@yandex.ru',\n\t\t\t\tmessage: `<div style=\"background-color: #FFC300; padding: 30px; border-radius: 20px\">\n\t\t\t\t\t\t\t\t\t\t<p>Please, click on the link and enter a new password</p>\n\t\t\t\t\t\t\t\t\t\t<a href='https://mariasyrokvash.github.io/fridayTask/#/new_pass/$token$'>Go to recovery password</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t`\n\t\t\t})\n\t}\n}","import React, {FC} from 'react';\nimport s from './PasswordRecovery.module.scss';\nimport {useFormik} from 'formik';\nimport SuperButton from '../../06_common/c2-SuperButton/SuperButton';\nimport SuperInputText from '../../06_common/c1-SuperInputText/SuperInputText';\nimport style from '../registration/Registration.module.scss';\nimport {sendEmailTC} from '../../../bll/reducers/recoveryPassword-reducer';\nimport {useDispatch} from 'react-redux';\n\ntype  FormikErrorType = {\n\temail?: string\n}\n\ntype PasswordRecoveryPropsType = {\n\ttheme?: string\n\trecoveryError: string | null\n}\n\nexport const PasswordRecovery: FC<PasswordRecoveryPropsType> = ({theme,recoveryError}) => {\n\tconst dispatch = useDispatch()\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: '',\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormikErrorType = {}\n\n\t\t\tif (!values.email) {\n\t\t\t\terrors.email = 'Email is required';\n\t\t\t}\n\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tdispatch(sendEmailTC(values.email))\n\t\t\t// alert(JSON.stringify(values));\n\t\t\tformik.resetForm()\n\t\t},\n\t})\n\n\treturn (\n\t\t<div className={s.box}>\n\t\t\t<h1 className={s.recTitle}>Recover Password</h1>\n\t\t\t<p className={s.recSubTitle}>Please, enter your email</p>\n\t\t\t{recoveryError ? <div className={s.recError}>{recoveryError}</div> : null}\n\t\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t\t<SuperInputText theme={theme} placeholder='e-mail' type=\"email\" {...formik.getFieldProps('email')}/>\n\t\t\t\t{formik.touched.email && formik.errors.email\n\t\t\t\t\t? (<div className={style.error}>{formik.errors.email}</div>)\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t<SuperButton>Send</SuperButton>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n","import React, {FC} from 'react';\nimport {PasswordRecovery} from './PasswordRecovery';\nimport {useSelector} from 'react-redux';\nimport {AppRootState} from '../../../bll/store';\nimport {RequestErrorType} from '../../../bll/reducers/app-reducer';\n\ntype PasswordRecoveryContainerPropsType = {\n\ttheme?: string\n}\n\nexport const PasswordRecoveryContainer:FC<PasswordRecoveryContainerPropsType> = ({theme}) => {\n\tconst recoveryError = useSelector<AppRootState, RequestErrorType>(state => state.recoveryPass.recoveryError)\n\n\n\treturn (\n\t\t<>\n\t\t\t<PasswordRecovery theme={theme} recoveryError={recoveryError}/>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppRootState} from '../../../bll/store';\nimport {Redirect} from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\n\n\nexport const PacksContainer = () => {\n\tconst isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\n\n\n\tif (!isLoggedIn) {\n\t\treturn <Redirect to={PATH.LOGIN}/>\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\tPacksContainer\n\t\t</div>\n\t)\n}\n\n","import React from 'react';\n\nexport const Cards = () => {\n\n\treturn (\n\t\t<>\n\t\t\tcards\n\t\t</>\n\t)\n}","import React, {FC} from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {LoginContainer} from '../02_auth/login/LoginContainer';\nimport {ProfileContainer} from '../04_profile/ProfileContainer';\nimport {Test} from '../test/Test';\nimport {RegistrationContainer} from '../02_auth/registration/RegistrationContainer';\nimport {Error404} from '../06_common/error404/Error404';\nimport {NewPasswordContainer} from '../02_auth/newPassword/NewPasswordContainer';\nimport {PasswordRecoveryContainer} from '../02_auth/passwordRecovery/PasswordRecoveryContainer';\nimport {PacksContainer} from '../03_packs/packs/PacksContainer';\nimport {Cards} from '../03_packs/Cards/Cards';\n\nexport const PATH = {\n\tLOGIN: '/login',\n\tREGISTRATION: '/registration',\n\tPROFILE: '/profile',\n\tERROR_404: '/404',\n\tRECOVERY_PASSWORD: '/recovery_pass',\n\tNEW_PASSWORD: '/new_pass',\n\tTEST: '/test',\n\tPACKS: '/packs',\n\tCARDS: '/cards'\n}\n\ntype RoutesPropsType = {\n\ttheme?: string\n}\n\nexport const Routes: FC<RoutesPropsType> = ({theme}) => {\n\treturn (\n\t\t<div>\n\t\t\t<Switch>\n\t\t\t\t<Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\n\t\t\t\t<Route path={PATH.LOGIN} render={() => <LoginContainer theme={theme}/>}/>\n\t\t\t\t<Route path={PATH.REGISTRATION} render={() => <RegistrationContainer theme={theme}/>}/>\n\t\t\t\t<Route path={PATH.PROFILE} render={() => <ProfileContainer/>}/>\n\t\t\t\t<Route path={PATH.ERROR_404} render={() => <Error404/>}/>\n\t\t\t\t<Route path={PATH.RECOVERY_PASSWORD} render={() => <PasswordRecoveryContainer theme={theme}/>}/>\n\t\t\t\t<Route path={PATH.NEW_PASSWORD} render={() => <NewPasswordContainer theme={theme}/>}/>\n\t\t\t\t<Route path={PATH.TEST} render={() => <Test/>}/>\n\t\t\t\t<Route path={PATH.PACKS} render={() => <PacksContainer/>}/>\n\t\t\t\t<Route path={PATH.CARDS + `/:id`} render={() => <Cards/>}/>\n\t\t\t\t<Route render={() => <Error404/>}/>\n\t\t\t</Switch>\n\t\t</div>\n\t)\n}\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport style from './Header.module.scss'\n\ntype MenuType = {\n\ttheme?: string\n}\n\nexport const Header: React.FC<MenuType> = ({theme}) => {\n\n\n\treturn (\n\t\t<nav className={style.navBox}>\n\t\t\t<ul className={style.navList}>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink activeClassName={style.selected}\n\t\t\t\t\t\t\t\t\t className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t to={PATH.REGISTRATION}>Registration</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.LOGIN}>Login</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.PROFILE}>Profile</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.RECOVERY_PASSWORD}>Recovery Password</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.NEW_PASSWORD}>New Password</NavLink>\n\t\t\t\t</li>\n\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.PACKS}>Packs</NavLink>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t{/*<div className={style.navItem}>*/}\n\t\t\t{/*    <NavLink className={style.link} to={PATH.CARDS}>Cards</NavLink>*/}\n\t\t\t{/*</div>*/}\n\t\t</nav>\n\t)\n}\n","import React, {FC} from 'react';\nimport SuperButton from '../c2-SuperButton/SuperButton';\nimport s from './Theme.module.scss';\n\ntype ThemePropsType = {\n\ttheme: string\n\ttoggleTheme: () => void\n}\n\nexport const Theme: FC<ThemePropsType> = ({theme, toggleTheme}) => {\n\treturn (\n\t\t<div className={s.btnBox}>\n\t\t\t<SuperButton onClick={toggleTheme}\n\t\t\t\t\t\t\t\t\t className={`${s.switcherBtn} ${theme === 'dark' ? s.dark : s.light}`}>{theme === 'dark' ?\n\t\t\t\t<span className={s.emoji}>&#127770;</span> : <span className={s.emoji}>&#127773;</span>}</SuperButton>\n\t\t</div>\n\t)\n}","import React from 'react';\nimport s from './App.module.scss';\nimport useTheme from '../../../utils/hooks/useTheme';\nimport {Header} from '../Header/Header';\nimport {Theme} from '../../06_common/Theme/Theme';\nimport {Routes} from '../../05_routes/Routes';\n\nfunction App() {\n\tconst {theme, toggleTheme} = useTheme();\n\n\n\treturn (\n\t\t<div className={`${s.app} ${theme === 'dark' ? s.dark : s.light}`}>\n\t\t\t<div className={s.container}>\n\t\t\t\t<Theme theme={theme} toggleTheme={toggleTheme}/>\n\t\t\t\t<Header theme={theme}/>\n\t\t\t\t<Routes theme={theme}/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nexport default () => {\n\tconst [theme, setTheme] = useState(\"light\");\n\tconst toggleTheme = () => {\n\t\tif (theme !== \"dark\") {\n\t\t\tlocalStorage.setItem(\"theme\", \"dark\");\n\t\t\tsetTheme(\"dark\");\n\t\t} else {\n\t\t\tlocalStorage.setItem(\"theme\", \"light\");\n\t\t\tsetTheme(\"light\");\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst localTheme = localStorage.getItem(\"theme\");\n\t\tif (localTheme) {\n\t\t\tsetTheme(localTheme);\n\t\t}\n\t}, []);\n\n\treturn {\n\t\ttheme,\n\t\ttoggleTheme\n\t};\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {registrationReducer} from './reducers/registration-reducer';\nimport {appReducer} from './reducers/app-reducer';\nimport {loginReducer} from './reducers/login-reducer';\nimport {recoveryPasswordReducer} from './reducers/recoveryPassword-reducer';\n\n\n\nconst rootReducer = combineReducers({\n\tapp: appReducer,\n\tregistration: registrationReducer,\n\tlogin: loginReducer,\n\trecoveryPass: recoveryPasswordReducer\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\n\nexport type AppRootState = ReturnType<typeof rootReducer> //автомачически подтягивает типы из combineReducers\n\n// @ts-ignore\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/01_app/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './bll/store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App/>\n\t\t\t</Provider>\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"regWrapper\":\"Registration_regWrapper__2G4xI\",\"regBox\":\"Registration_regBox__21zCG\",\"regInner\":\"Registration_regInner__w5sP4\",\"regTitle\":\"Registration_regTitle__2x3rK\",\"regSubTitle\":\"Registration_regSubTitle__1Vv3_\",\"regError\":\"Registration_regError__2X103\",\"error\":\"Registration_error__34sZp\",\"link\":\"Registration_link__3RPkv\",\"dark\":\"Registration_dark__2gdmy\",\"light\":\"Registration_light__2_S1T\"};"],"sourceRoot":""}
{"version":3,"sources":["ui/02_auth/q3-registration/Registration.module.scss","ui/04_profile/Profile.module.scss","ui/02_auth/q5-newPassword/NewPassword.module.scss","ui/02_auth/q4-passwordRecovery/PasswordRecovery.module.scss","ui/06_common/c13-Initializing/Initializing.module.scss","ui/06_common/c12-Theme/Theme.module.scss","ui/06_common/c1-SuperInputText/SuperInputText.module.scss","ui/06_common/c3-SuperCheckbox/SuperCheckbox.module.scss","ui/01_app/v1-App/App.module.scss","ui/06_common/c2-SuperButton/SuperButton.module.scss","ui/01_app/v2-Header/Header.module.scss","ui/03_packs/Packs/Packs.module.scss","ui/02_auth/q2-logout/Logout.module.scss","ui/02_auth/q1-login/Login.module.scss","bll/reducers/login-reducer.ts","reportWebVitals.ts","dal/LoginAPI.ts","bll/reducers/profile-reducer.ts","bll/reducers/app-reducer.ts","bll/reducers/registration-reducer.ts","dal/RegistrationAPI.ts","bll/reducers/recoveryPassword-reducer.ts","dal/PasswordRecoveryAPI.ts","bll/reducers/newPassword-reducer.ts","dal/NewPasswordAPI.ts","bll/reducers/packs-reducer.ts","dal/Packs.ts","bll/store.ts","ui/04_profile/image/user.svg","ui/04_profile/image/edit.svg","ui/04_profile/Profile.tsx","ui/04_profile/ProfileContainer.tsx","ui/test/Test.tsx","ui/03_packs/Cards/Cards.tsx","ui/06_common/c1-SuperInputText/SuperInputText.tsx","ui/06_common/c2-SuperButton/SuperButton.tsx","ui/06_common/c3-SuperCheckbox/SuperCheckbox.tsx","ui/02_auth/q1-login/Login.tsx","ui/06_common/c5-Loader/Loader.tsx","ui/02_auth/q1-login/LoginContainer.tsx","ui/02_auth/q3-registration/Registration.tsx","ui/02_auth/q3-registration/RegistrationContainer.tsx","ui/06_common/c4-Error404/Error404.tsx","ui/02_auth/q4-passwordRecovery/PasswordRecovery.tsx","ui/02_auth/q4-passwordRecovery/PasswordRecoveryContainer.tsx","ui/02_auth/q5-newPassword/NewPassword.tsx","ui/02_auth/q5-newPassword/NewPasswordContainer.tsx","ui/03_packs/Packs/Packs.tsx","ui/03_packs/Packs/PacksContainer.tsx","ui/05_routes/Routes.tsx","ui/02_auth/q2-logout/Logout.tsx","ui/01_app/v2-Header/Header.tsx","ui/06_common/c12-Theme/Theme.tsx","ui/06_common/c13-Initializing/Initializing.tsx","ui/01_app/v1-App/App.tsx","utils/hooks/useTheme.tsx","index.tsx"],"names":["module","exports","LOGIN","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","authAPI","parameters","post","delete","PROFILE","initialState","isLoggedIn","loginError","logoutStatus","loginStatus","setIsLoggedInAC","value","type","SET_IS_LOGGED_IN","setLogoutStatusAC","status","SET_STATUS_LOGOUT","loginTC","data","dispatch","res","setUserProfileAC","setIdProfileAC","_id","catch","err","error","response","message","SIGN_IN_ERROR","signInErrorAC","finally","APP","profile","email","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","myId","SET_USER_PROFILE","SET_MY_ID","authMeTC","console","log","SET_ERROR","setErrorAC","Registration","initialized","setAppStatusAC","SET_STATUS","initializeAppTC","promise","Promise","all","SET_INITIALIZED","registrationAPI","RECOVERY","isRegistration","registrationError","signUpTC","SIGN_UP","SIGN_UP_ERROR","signUpServerErrorAC","passwordRecoveryAPI","from","NEW_PASS","recoveryError","recoverySuccess","setRecoveryStatusAC","sendEmailTC","info","SET_SUCCESS","newPasswordAPI","newPassword","token","password","resetPasswordToken","PACKS","successMessage","sendNewPasswordTC","success","packsAPI","getPacksData","packName","min","max","sortPacks","a","page","pageCount","get","addNewPack","newPack","cardsPack","deletePack","idPack","updatePack","put","packs","searchName","packsPerPage","currentPage","totalPacksCount","minCardsCount","maxCardsCount","setPacksStatusAC","SET_STATUS_PACKS","rootReducer","combineReducers","app","state","action","registration","login","SET_STATUS_LOGIN","recoveryPass","SET_PACKS","store","createStore","applyMiddleware","thunk","window","Profile","className","style","profileBox","editBox","src","edit","editIcon","user","alt","wrap","nameAccent","to","PATH","packLink","packsLinkText","ProfileContainer","useSelector","Test","Cards","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","theme","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","dark","light","e","currentTarget","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","Login","useState","disable","setDisable","useDispatch","formik","useFormik","initialValues","confirmPassword","validate","values","errors","Object","keys","length","onSubmit","resetForm","loginWrapper","loginTitle","loginBox","handleSubmit","loginInner","placeholder","getFieldProps","touched","loginCheckboxInner","htmlFor","loginLabel","id","disabled","link","RECOVERY_PASSWORD","REGISTRATION","Loader","LoginContainer","regWrapper","regTitle","regSubTitle","regError","regBox","regInner","RegistrationContainer","Error404","PasswordRecovery","box","recTitle","recSubTitle","recError","recSuccess","recInner","PasswordRecoveryContainer","NewPassword","errorMessage","useParams","newPassTitle","newPassSubTitle","newPassError","newPassSuccess","newPassInner","NewPasswordContainer","Packs","packsBox","PacksContainer","useEffect","getState","packsOnPage","ERROR_404","NEW_PASSWORD","TEST","CARDS","Routes","path","exact","render","Logout","logOutHandler","useCallback","onClick","logout","Header","navBox","navList","navItem","activeClassName","selected","Theme","toggleTheme","btnBox","switcherBtn","emoji","InitializingLoader","loader","inner","one","two","three","App","setTheme","localTheme","localStorage","getItem","setItem","useTheme","container","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d56809af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"regWrapper\":\"Registration_regWrapper__3eYe6\",\"regBox\":\"Registration_regBox__2LMQ5\",\"regInner\":\"Registration_regInner__2bNiO\",\"regTitle\":\"Registration_regTitle__1PNOM\",\"regSubTitle\":\"Registration_regSubTitle__4lqAC\",\"regError\":\"Registration_regError__mtUxR\",\"error\":\"Registration_error__16Q5O\",\"link\":\"Registration_link__2rOW4\",\"dark\":\"Registration_dark__2oETZ\",\"light\":\"Registration_light__3o2_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Profile_wrap__2U5i-\",\"profileBox\":\"Profile_profileBox__37dqy\",\"name\":\"Profile_name__1TN_T\",\"packs\":\"Profile_packs__1xaPA\",\"nameAccent\":\"Profile_nameAccent__1zeMj\",\"packLink\":\"Profile_packLink__wPtDM\",\"avatar\":\"Profile_avatar__3g_k8\",\"editBox\":\"Profile_editBox__5XrR7\",\"editIcon\":\"Profile_editIcon__3D0aC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"NewPassword_box__2Ax-K\",\"newPassInner\":\"NewPassword_newPassInner__39cJv\",\"newPassTitle\":\"NewPassword_newPassTitle__2yJIM\",\"newPassSubTitle\":\"NewPassword_newPassSubTitle__Em4s4\",\"newPassError\":\"NewPassword_newPassError__3-Cgd\",\"newPassSuccess\":\"NewPassword_newPassSuccess__1KhTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"PasswordRecovery_box__jW_ju\",\"recInner\":\"PasswordRecovery_recInner__2kOyL\",\"recTitle\":\"PasswordRecovery_recTitle__1ZwAl\",\"recSubTitle\":\"PasswordRecovery_recSubTitle__1HAp7\",\"recError\":\"PasswordRecovery_recError__2VQ_4\",\"recSuccess\":\"PasswordRecovery_recSuccess__lrdzO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Initializing_loader__2ioxk\",\"inner\":\"Initializing_inner__3_bfS\",\"one\":\"Initializing_one__2-D2y\",\"rotate-one\":\"Initializing_rotate-one__2FwRQ\",\"two\":\"Initializing_two__16xNL\",\"rotate-two\":\"Initializing_rotate-two__XeFLW\",\"three\":\"Initializing_three__1bt-9\",\"rotate-three\":\"Initializing_rotate-three__1B8Gj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switcherBtn\":\"Theme_switcherBtn__15pv2\",\"dark\":\"Theme_dark__Fa-1D\",\"light\":\"Theme_light__1Dv7f\",\"emoji\":\"Theme_emoji__2T0ug\",\"btnBox\":\"Theme_btnBox__scJx2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1pt1r\",\"dark\":\"SuperInputText_dark__3SgRZ\",\"light\":\"SuperInputText_light__1QI5s\",\"errorInput\":\"SuperInputText_errorInput__36R50\",\"error\":\"SuperInputText_error__VSKlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClassName\":\"SuperCheckbox_spanClassName__1LNW5\",\"check\":\"SuperCheckbox_check__31jrR\",\"checkbox\":\"SuperCheckbox_checkbox__22YVf\",\"dark\":\"SuperCheckbox_dark__aD32l\",\"light\":\"SuperCheckbox_light__1i1LY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2rHSZ\",\"container\":\"App_container__3SJ_N\",\"dark\":\"App_dark__1smCU\",\"light\":\"App_light__1y1rg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3JbaB\",\"dark\":\"SuperButton_dark__3wEGX\",\"light\":\"SuperButton_light__20g5N\",\"classname\":\"SuperButton_classname__vnq3c\",\"red\":\"SuperButton_red__3MBya\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBox\":\"Header_navBox__2Bnme\",\"navList\":\"Header_navList__1WXT7\",\"navItem\":\"Header_navItem__16O1Z\",\"link\":\"Header_link__1fLiS\",\"selected\":\"Header_selected__jrnNx\",\"dark\":\"Header_dark__1fITA\",\"light\":\"Header_light__zlVzw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsBox\":\"Packs_packsBox__1QKY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logout\":\"Logout_logout__2b4_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__2SbJm\",\"loginBox\":\"Login_loginBox__okndB\",\"loginInner\":\"Login_loginInner__3ud_A\",\"loginCheckboxInner\":\"Login_loginCheckboxInner__31lab\",\"loginLabel\":\"Login_loginLabel__1Qscv\",\"loginTitle\":\"Login_loginTitle__30RJV\",\"error\":\"Login_error__NP8bH\",\"link\":\"Login_link__2lXZg\",\"dark\":\"Login_dark__2w5zM\",\"light\":\"Login_light__2zLuW\"};","import {Dispatch} from 'redux'\nimport {RequestStatusType, setAppInitialedAC, setAppStatusAC} from './app-reducer';\nimport {authAPI, LoginParamsType} from '../../dal/LoginAPI';\nimport {setIdProfileAC, setUserProfileAC} from './profile-reducer';\n\n\nenum LOGIN {\n\tSET_IS_LOGGED_IN = 'SET_IS_LOGGED_IN',\n\tSIGN_IN_ERROR = 'SIGN_IN_ERROR',\n\tSET_STATUS_LOGOUT = 'SET_STATUS_LOGOUT',\n\tSET_STATUS_LOGIN = 'SET_STATUS_LOGIN'\n}\n\nconst initialState: InitialStateType = {\n\tisLoggedIn: false,\n\tloginError: null,\n\tlogoutStatus: 'idle',\n\tloginStatus: 'idle'\n}\n\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase LOGIN.SET_IS_LOGGED_IN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: action.value\n\t\t\t}\n\t\tcase LOGIN.SIGN_IN_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloginError: action.error\n\t\t\t}\n\t\tcase LOGIN.SET_STATUS_LOGOUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlogoutStatus: action.status\n\t\t\t}\n\t\tcase LOGIN.SET_STATUS_LOGIN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloginStatus: action.status\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n// actions\nexport const setIsLoggedInAC = (value: boolean) => ({type: LOGIN.SET_IS_LOGGED_IN, value} as const)\nexport const signInErrorAC = (error: string) => ({type: LOGIN.SIGN_IN_ERROR, error} as const)\nexport const setLogoutStatusAC = (status: RequestStatusType) => ({type: LOGIN.SET_STATUS_LOGOUT, status} as const)\nexport const setLoginStatusAC = (status: RequestStatusType) => ({type: LOGIN.SET_STATUS_LOGIN, status} as const)\n\n//thunks\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\n\tdispatch(setLogoutStatusAC('loading'))\n\tauthAPI.login(data)\n\t\t.then(res => {\n\t\t\t// dispatch(setAppInitialedAC())\n\t\t\tdispatch(setIsLoggedInAC(true))\n\t\t\tdispatch(setUserProfileAC(res.data))\n\t\t\tdispatch(setIdProfileAC(res.data._id))\n\t\t})\n\t\t.catch(err => {\n\t\t\tconst error = err.response\n\t\t\t\t? err.response.data.error\n\t\t\t\t: (err.message + ', more details in the console');\n\t\t\tdispatch(signInErrorAC(error))\n\t\t})\n\t\t.finally(() => {\n\t\t\tdispatch(setLogoutStatusAC('succeeded'))\n\t\t})\n}\n\n\nexport const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\n\tdispatch(setAppStatusAC('loading'))\n\n\tauthAPI.logout()\n\t\t.then(() => {\n\t\t\tdispatch(setIsLoggedInAC(false))\n\t\t\t// dispatch(setAppInitialedAC())\n\t\t})\n\t\t.catch(err => {\n\t\t\tconst error = err.response\n\t\t\t\t? err.response.data.error\n\t\t\t\t: (err.message + ', more details in the console');\n\t\t})\n\t\t.finally(() => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n}\n\n\ntype InitialStateType = {\n\tisLoggedIn: boolean\n\tloginError: null | string\n\tlogoutStatus: RequestStatusType\n\tloginStatus: RequestStatusType\n}\n\n\ntype ActionsType =\n\tReturnType<typeof setIsLoggedInAC>\n\t| ReturnType<typeof setUserProfileAC>\n\t| ReturnType<typeof setAppStatusAC>\n\t| ReturnType<typeof signInErrorAC>\n\t| ReturnType<typeof setIdProfileAC>\n\t| ReturnType<typeof setAppInitialedAC>\n\t| ReturnType<typeof setLogoutStatusAC>\n\t| ReturnType<typeof setLoginStatusAC>\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios'\n\n\nexport const instance = axios.create({\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\n\t// baseURL: 'http://localhost:7542/2.0/',\n\twithCredentials: true,\n\n})\n\n//api\nexport const authAPI = {\n\tlogin(parameters: LoginParamsType) {\n\t\treturn instance.post<ProfileType>('auth/login', parameters)\n\t},\n\tauthMe() {\n\t\treturn instance.post('auth/me')\n\t},\n\tlogout() {\n\t\treturn instance.delete('auth/me')\n\t}\n}\n\nexport type ProfileType = {\n\t_id: string\n\temail: string\n\tname: string\n\tavatar: string\n\tpublicCardPacksCount: number\n\tcreated: string\n\tupdated: string\n\tisAdmin: boolean\n\tverified: boolean\n\trememberMe: boolean\n\terror: string\n}\n\n//type\nexport type LoginParamsType = {\n\temail: string\n\tpassword: string\n\trememberMe?: boolean\n}\n","import {setIsLoggedInAC} from './login-reducer';\nimport {Dispatch} from 'redux';\nimport {authAPI} from '../../dal/LoginAPI';\nimport {ThunkAction} from 'redux-thunk';\nimport {AppRootState} from '../store';\nimport {RequestErrorType} from './app-reducer';\n\n\nenum PROFILE {\n\tSET_USER_PROFILE = 'SET_USER_PROFILE',\n\tSET_MY_ID = 'SET_MY_ID',\n\tSET_ERROR = 'SET_ERROR'\n}\n\nconst initialState: ProfileInitialStateType = {\n\tprofile: {\n\t\t_id: null,\n\t\temail: null,\n\t\tname: null,\n\t\tavatar: null,\n\t\tpublicCardPacksCount: null,\n\t\tcreated: null,\n\t\tupdated: null,\n\t\tisAdmin: null,\n\t\tverified: null,\n\t\trememberMe: null,\n\t\terror: null\n\t},\n\tmyId: null,\n\terror: null\n}\n\nexport const profileReducer = (state: ProfileInitialStateType = initialState, action: ActionsType): ProfileInitialStateType => {\n\tswitch (action.type) {\n\t\tcase PROFILE.SET_USER_PROFILE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprofile: action.profile\n\t\t\t}\n\t\tcase PROFILE.SET_MY_ID: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmyId: action.myId\n\t\t\t}\n\t\t}\n\t\tcase PROFILE.SET_ERROR: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t\terror: action.error\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n// actions\nexport const setUserProfileAC = (profile: ProfileType) => ({type: PROFILE.SET_USER_PROFILE, profile} as const)\nexport const setIdProfileAC = (myId: string | null) => ({type: PROFILE.SET_MY_ID, myId} as const)\nexport const setErrorAC = (error: RequestErrorType) => ({type: PROFILE.SET_ERROR, error} as const)\n//thunks\nexport const authMeTC = (): AuthMeThunkType => (dispatch) => {\n\treturn authAPI.authMe()\n\t\t.then(res => {\n\t\t\tif (res.status === 200) {\n\t\t\t\tdispatch(setIsLoggedInAC(true))\n\t\t\t\tdispatch(setUserProfileAC(res.data))\n\t\t\t\tdispatch(setIdProfileAC(res.data._id))\n\t\t\t}\n\t\t})\n\t\t.catch(err => {\n\t\t\tconst error = err.response\n\t\t\t\t? err.response.data.error\n\t\t\t\t: (err.message + ', more details in the console');\n\t\t\tconsole.log(error)\n\t\t\tdispatch(setErrorAC(error))\n\t\t})\n}\n\nexport type ProfileType = {\n\t_id: string | null\n\temail: string | null\n\tname: string | null\n\tavatar: string | null\n\tpublicCardPacksCount: number | null\n\tcreated: string | null\n\tupdated: string | null\n\tisAdmin: boolean | null\n\tverified: boolean | null\n\trememberMe: boolean | null\n\terror: string | null\n}\n\nexport type ProfileInitialStateType = {\n\tprofile: ProfileType\n\tmyId: string | null\n\terror: RequestErrorType\n}\n\ntype ActionsType = ReturnType<typeof setIdProfileAC>\n\t| ReturnType<typeof setIsLoggedInAC>\n\t| ReturnType<typeof setUserProfileAC>\n\t| ReturnType<typeof setErrorAC>\n\ntype AuthMeThunkType = ThunkAction<Promise<void>, AppRootState, Dispatch<ActionsType>, ActionsType>","import {Dispatch} from 'redux';\nimport {ThunkAction} from 'redux-thunk';\nimport {AppRootState} from '../store';\nimport {authMeTC} from './profile-reducer';\n\n\nenum APP {\n\tSET_STATUS = 'SET-STATUS',\n\tSET_ERROR = 'SET_ERROR',\n\tSET_INITIALIZED = 'SET_INITIALIZED'\n}\n\nconst initialState: InitialStateType = {\n\tstatus: 'idle',\n\terror: null,\n\tinitialized: false\n}\n\ntype InitialStateType = {\n\tstatus: RequestStatusType,\n\terror: RequestErrorType,\n\tinitialized: boolean\n}\n\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase APP.SET_STATUS:\n\t\t\treturn {...state, status: action.status}\n\t\tcase APP.SET_ERROR:\n\t\t\treturn {...state, error: action.error}\n\t\tcase APP.SET_INITIALIZED:\n\t\t\treturn {...state, initialized: true}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n//actions\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: APP.SET_STATUS, status} as const)\nexport const setAppErrorAC = (error: RequestErrorType) => ({type: APP.SET_ERROR, error} as const)\nexport const setAppInitialedAC = () => ({type: APP.SET_INITIALIZED} as const)\n\n//thunks\nexport const initializeAppTC = (): ThunkType => (dispatch: Dispatch<ActionsType>) => {\n\tconst promise = dispatch(authMeTC())\n\tconsole.log(promise)\n\n\tPromise.all([promise]).then(() => {\n\t\tconsole.log(promise)\n\t\tdispatch(setAppInitialedAC())\n\t})\n}\n\n\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\nexport type RequestErrorType = string | null\n\n\ntype ActionsType = ReturnType<typeof setAppStatusAC>\n\t| ReturnType<typeof setAppErrorAC>\n\t| ReturnType<typeof setAppInitialedAC>\n\t| any\n\ntype ThunkType = ThunkAction<void, AppRootState, Dispatch<ActionsType>, ActionsType>\n","import {Dispatch} from 'redux';\nimport {setAppStatusAC} from './app-reducer';\nimport {registrationAPI, SignUpType} from '../../dal/RegistrationAPI';\n\nenum Registration {\n\tSIGN_UP = 'SIGN_UP',\n\tSIGN_UP_ERROR = 'SIGN_UP_ERROR',\n}\n\nconst initialState: InitialStateType = {\n\tisRegistration: false,\n\tregistrationError: null\n}\n\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase Registration.SIGN_UP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisRegistration: action.isRegistration\n\t\t\t}\n\t\tcase Registration.SIGN_UP_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tregistrationError: action.error\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n// actions\nexport const signUpAC = (isRegistration: boolean) => ({type: Registration.SIGN_UP, isRegistration} as const)\nexport const signUpServerErrorAC = (error: string | null) => ({type: Registration.SIGN_UP_ERROR, error} as const)\n\n//thunks\nexport const signUpTC = (data: SignUpType) => (dispatch: Dispatch<ActionsType>) => {\n\tdispatch(setAppStatusAC('loading'))\n\tregistrationAPI.signUp(data)\n\t\t.then((res) => {\n\t\t\tdispatch(signUpAC(true))\n\t\t})\n\t\t.catch(err => {\n\t\t\tconst error = err.response\n\t\t\t\t? err.response.data.error\n\t\t\t\t: (err.message + ', more details in the console');\n\t\t\tdispatch(signUpServerErrorAC(error))\n\t\t})\n\t\t.finally(() => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n}\n\nexport type ActionsType =\n\tReturnType<typeof signUpAC>\n\t| ReturnType<typeof setAppStatusAC>\n\t| ReturnType<typeof signUpServerErrorAC>\n\n\ntype InitialStateType = {\n\tisRegistration: boolean\n\tregistrationError: null | string\n}","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\n\t// baseURL: 'http://localhost:7542/2.0/',\n\twithCredentials: true\n})\n\n\n//api\nexport const registrationAPI = {\n\tsignUp(parameters: SignUpType) {\n\t\treturn instance.post<SignUpType>('auth/register', parameters)\n\t}\n}\n\n//type\nexport type SignUpType = {\n\temail: string\n\tpassword: string\n}\n\n","import {Dispatch} from 'redux';\nimport {passwordRecoveryAPI} from '../../dal/PasswordRecoveryAPI';\n\nenum RECOVERY {\n\tSET_ERROR = 'SET_ERROR',\n\tSET_SUCCESS = 'SET_SUCCESS',\n\tSET_STATUS = 'SET_STATUS'\n}\n\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\n\ntype InitialStateType = {\n\tstatus: RequestStatusType\n\trecoveryError: string | null\n\trecoverySuccess: string\n}\n\nconst initialState: InitialStateType = {\n\tstatus: 'idle',\n\trecoveryError: '',\n\trecoverySuccess: ''\n}\n\nexport const recoveryPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase RECOVERY.SET_STATUS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: action.status\n\t\t\t}\n\t\tcase RECOVERY.SET_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trecoveryError: action.error\n\t\t\t}\n\t\tcase RECOVERY.SET_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trecoverySuccess: action.recoverySuccess\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n// actions\nexport const setErrorAC = (error: string) => ({type: RECOVERY.SET_ERROR, error} as const)\nexport const setSuccessAC = (recoverySuccess: string) => ({type: RECOVERY.SET_SUCCESS, recoverySuccess} as const)\nexport const setRecoveryStatusAC = (status: RequestStatusType) => ({type: RECOVERY.SET_STATUS, status} as const)\n\n//thunks\nexport const sendEmailTC = (email: string) => (dispatch: Dispatch) => {\n\tdispatch(setRecoveryStatusAC('loading'))\n\tpasswordRecoveryAPI.sendEmail(email)\n\t\t.then(res => {\n\t\t\tif (res.status === 200) {\n\t\t\t\tdispatch(setSuccessAC(res.data.info))\n\t\t\t}\n\t\t})\n\t\t.catch(err => {\n\t\t\tconst error = err.response\n\t\t\t\t? err.response.data.error\n\t\t\t\t: (err.message + ', more details in the console')\n\t\t\tdispatch(setErrorAC(error))\n\t\t})\n\t\t.finally(() => {\n\t\t\tdispatch(setRecoveryStatusAC('succeeded'))\n\t\t})\n}\n\n\n\ntype ActionsType = ReturnType<typeof setErrorAC>\n\t| ReturnType<typeof setSuccessAC>\n\t| ReturnType<typeof setRecoveryStatusAC>","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\n\t// baseURL: 'http://localhost:7542/2.0/',\n\twithCredentials: true\n})\n\n\nexport const passwordRecoveryAPI = {\n\tsendEmail(email: string) {\n\t\treturn instance.post('auth/forgot',\n\t\t\t{\n\t\t\t\temail: email,\n\t\t\t\tfrom: 'mariya.syrokvash@yandex.ru',\n\t\t\t\tmessage: `<div style=\"background-color: #FFC300; padding: 30px; border-radius: 20px\">\n\t\t\t\t\t\t\t\t\t\t<p>Please, click on the link and enter a new password</p>\n\t\t\t\t\t\t\t\t\t\t<a href='https://mariasyrokvash.github.io/fridayTask/#/new_pass/$token$'>Go to recovery password</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t`\n\t\t\t})\n\t}\n}","import {Dispatch} from 'redux';\nimport {newPasswordAPI} from '../../dal/NewPasswordAPI';\n\n\nenum NEW_PASS {\n\tSET_ERROR = 'SET_ERROR',\n\tSET_SUCCESS = 'SET_SUCCESS',\n\tSET_STATUS = 'SET_STATUS'\n}\n\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\n\ntype InitialStateType = {\n\tstatus: RequestStatusType\n\terror: string\n\tsuccessMessage: string\n}\n\nconst initialState: InitialStateType = {\n\tstatus: 'idle',\n\terror: '',\n\tsuccessMessage: ''\n}\n\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase NEW_PASS.SET_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.error\n\t\t\t}\n\t\tcase NEW_PASS.SET_STATUS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: action.status\n\t\t\t}\n\t\tcase NEW_PASS.SET_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsuccessMessage: action.success\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n// actions\nexport const setErrorAC = (error: string) => ({type: NEW_PASS.SET_ERROR, error} as const)\nexport const setSuccessAC = (success: string) => ({type: NEW_PASS.SET_SUCCESS, success} as const)\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: NEW_PASS.SET_STATUS, status} as const)\n\n\n//thunks\nexport const sendNewPasswordTC = (newPassword: string, token: string) => (dispatch: Dispatch) => {\n\tdispatch(setAppStatusAC('loading'))\n\tnewPasswordAPI.sendNewPassword(newPassword, token)\n\t\t.then(res => {\n\t\t\tconsole.log(res.data.message)\n\t\t\tdispatch(setSuccessAC(res.data.message))\n\t\t})\n\t\t.catch(err => {\n\t\t\tconst error = err.response\n\t\t\t\t? err.response.data.error\n\t\t\t\t: (err.message + ', more details in the console')\n\t\t\tdispatch(setErrorAC(error))\n\t\t})\n\t\t.finally(() => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n}\n\n\ntype ActionsType = ReturnType<typeof setErrorAC>\n\t| ReturnType<typeof setSuccessAC>\n\t| ReturnType<typeof setAppStatusAC>","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\n\t// baseURL: 'http://localhost:7542/2.0/',\n\twithCredentials: true\n})\n\n\nexport const newPasswordAPI = {\n\tsendNewPassword(newPassword: string, token: string | undefined) {\n\t\treturn instance.post('auth/set-new-password',\n\t\t\t{\n\t\t\t\tpassword: newPassword,\n\t\t\t\tresetPasswordToken: token\n\t\t})\n\t}\n}","import {Dispatch} from 'redux';\nimport {RequestErrorType, RequestStatusType} from './app-reducer';\nimport {packsAPI} from '../../dal/Packs';\nimport {ThunkAction} from 'redux-thunk';\nimport {AppRootState} from '../store';\n\nenum PACKS {\n\tSET_PACKS = 'SET_PACKS',\n\tSET_STATUS_PACKS = 'SET_STATUS_PACKS',\n\tSET_ERROR_PACKS = 'SET_ERROR_PACKS'\n}\n\nconst initialState: initialStateType = {\n\terror: null,\n\tstatus: 'idle',\n\tpacks: [],\n\tsearchName: '',\n\tmin: 0,\n\tmax: 24,\n\tsortPacks: '',\n\tpage: 1,\n\tpacksPerPage: 10,\n\tcurrentPage: 1,\n\ttotalPacksCount: 0,\n\tminCardsCount: 0,\n\tmaxCardsCount: 24,\n}\n\n\nexport const packsReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\n\tswitch (action.type) {\n\t\tcase PACKS.SET_PACKS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpacks: action.packs\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n//actions\nexport const setPacksAC = (packs: Array<PackType>) => ({type: PACKS.SET_PACKS, packs} as const)\nexport const setPacksStatusAC = (status: RequestStatusType) => ({type: PACKS.SET_STATUS_PACKS, status} as const)\nexport const setPacksErrorAC = (error: RequestErrorType) => ({type: PACKS.SET_ERROR_PACKS, error} as const)\n\n//thunks\n\nexport const getPacksTC = (): ThunkType => (dispatch, getState) => {\n\tdispatch(setPacksStatusAC('loading'))\n\n\tconst state = getState()\n\tconst searchName = state.packs.searchName\n\tconst min = state.packs.min\n\tconst max = state.packs.max\n\tconst sortPacks = state.packs.sortPacks\n\tconst currentPage = state.packs.page\n\tconst packsOnPage = state.packs.packsPerPage\n\tconst myId = state.profile.myId\n\n\tpacksAPI.getPacksData(searchName, min, max, sortPacks, currentPage, packsOnPage, myId)\n\t\t.then((res) => {\n\t\t\tconsole.log(res)\n\t\t})\n\t\t.catch(e => {\n\t\t\tconst error = e.response\n\t\t\t\t? e.response.data.error\n\t\t\t\t: (e.message + ', more details in the console');\n\t\t})\n\t\t.finally(() => {\n\t\t\tdispatch(setPacksStatusAC('succeeded'))\n\t\t})\n}\n\ntype ActionsType =\n\tReturnType<typeof setPacksAC>\n\t| ReturnType<typeof setPacksStatusAC>\n\t| ReturnType<typeof setPacksErrorAC>\n\nexport type PackType = {\n\tcardsCount: number | null\n\tcreated: Date | null\n\tdeckCover: string | null\n\tgrade: number | null\n\tmore_id: string | null\n\tname: string | null\n\tpath: string | null\n\tprivate: boolean\n\trating: number | null\n\tshots: number | null\n\ttype: string | null\n\tupdated: Date | null\n\tuser_id: string | null\n\tuser_name: string | null\n\t__v: number | null\n\t_id: string\n}\n\ntype initialStateType = {\n\terror: RequestErrorType\n\tstatus: RequestStatusType\n\tpacks: Array<PackType>\n\tsearchName: string\n\tmin: number\n\tmax: number\n\tsortPacks: string\n\tpage: number\n\tpacksPerPage: number\n\tcurrentPage: number\n\ttotalPacksCount: number\n\tminCardsCount: number\n\tmaxCardsCount: number\n}\n\n\nexport type ThunkType = ThunkAction<void, AppRootState, Dispatch<ActionsType>, ActionsType>","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\n\t// baseURL: 'http://localhost:7542/2.0/',\n\twithCredentials: true\n})\n\n\nexport const packsAPI = {\n\tgetPacksData: async (\n\t\tpackName: string, min: number, max: number, sortPacks: string, page: number = 1 , pageCount: number = 15, myId: string | null\n\t) => {\n\t\tconst response = await instance.get(`cards/pack?pageCount=${pageCount}&page=${page}&packName=${packName}&sortPacks=${sortPacks}&min=${min}&max=${max}&user_id=${myId === null ? '' : myId}`)\n\t\treturn response.data\n\t},\n\taddNewPack: async (newPack: any) => {\n\t\tconst response = await instance.post('cards/pack', {cardsPack: newPack})\n\t\treturn response.data\n\t},\n\tdeletePack: async  (idPack: string | null) => {\n\t\tconst response = await instance.delete(`cards/pack?id=${idPack}`)\n\t\treturn response.data\n\t},\n\tupdatePack: async (updatePack: any) => {\n\t\tconst response = await instance.put('cards/pack', {cardsPack: updatePack})\n\t\treturn response.data\n\t}\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {registrationReducer} from './reducers/registration-reducer';\nimport {appReducer} from './reducers/app-reducer';\nimport {loginReducer} from './reducers/login-reducer';\nimport {recoveryPasswordReducer} from './reducers/recoveryPassword-reducer';\nimport {newPasswordReducer} from './reducers/newPassword-reducer';\nimport {profileReducer} from './reducers/profile-reducer';\nimport {packsReducer} from './reducers/packs-reducer';\n\n\n\nconst rootReducer = combineReducers({\n\tapp: appReducer,\n\tregistration: registrationReducer,\n\tlogin: loginReducer,\n\trecoveryPass: recoveryPasswordReducer,\n\tnewPassword: newPasswordReducer,\n\tprofile: profileReducer,\n\tpacks: packsReducer\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\n\nexport type AppRootState = ReturnType<typeof rootReducer> //автомачически подтягивает типы из combineReducers\n\n// @ts-ignore\nwindow.store = store","export default __webpack_public_path__ + \"static/media/user.3b7fc895.svg\";","export default __webpack_public_path__ + \"static/media/edit.e4aa39bd.svg\";","import React, {FC} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport style from './Profile.module.scss'\nimport {PATH} from '../05_routes/Routes';\nimport {ProfileType} from '../../bll/reducers/profile-reducer';\nimport user from './image/user.svg'\nimport edit\tfrom './image/edit.svg'\n\ntype ProfilePropsType = {\n\tprofile: ProfileType\n}\n\nexport const Profile: FC<ProfilePropsType> = ({profile}) => {\n\n//1234567890-=\n\n\treturn (\n\t\t<div className={style.profileBox}>\n\t\t\t<div className={style.editBox}><img src={edit} className={style.editIcon}/></div>\n\t\t\t{/*<h1 className={style.title}>Profile</h1>*/}\n\t\t\t<div>\n\t\t\t\t<div><img src={user} alt='userPhoto' className={style.avatar}/></div>\n\t\t\t</div>\n\t\t\t<div className={style.wrap}>\n\t\t\t\t<p className={style.name}>Hello, <span className={style.nameAccent}>{profile.name}</span></p>\n\t\t\t\t<p className={style.packs}>You have {profile.publicCardPacksCount}\n\n\t\t\t\t<NavLink to={PATH.PACKS} className={style.packLink}><span className={style.packsLinkText}> packs</span></NavLink>\n\t\t\t\t.</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport {Profile} from './Profile';\nimport {Redirect} from 'react-router-dom';\nimport {PATH} from '../05_routes/Routes';\nimport {useSelector} from 'react-redux';\nimport {AppRootState} from '../../bll/store';\nimport {ProfileType} from '../../bll/reducers/profile-reducer';\n\n\nexport const ProfileContainer = () => {\n  const isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\n  const profile = useSelector<AppRootState, ProfileType>(state => state.profile.profile)\n\n\n  if (!isLoggedIn) {\n    return <Redirect to={PATH.LOGIN}/>\n  }\n\n    return (\n\n        <div>\n            <Profile profile={profile} />\n        </div>\n    );\n}\n","import React from 'react';\n\n\nexport const Test = () => {\n\n\n\treturn (\n\t\t<div>\n\n\t\t</div>\n\t);\n}\n","import React from 'react';\n\nexport const Cards = () => {\n\n\treturn (\n\t\t<>\n\t\t\tcards\n\t\t</>\n\t)\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.scss\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n\tonChangeText?: (value: string) => void\n\ttype?: string\n\tonEnter?: () => void\n\terror?: string | null | boolean\n\tspanClassName?: string\n\ttheme?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n\t{\n\t\ttype, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n\t\tonChange, onChangeText,\n\t\tonKeyPress, onEnter,\n\t\terror,\n\t\tclassName, spanClassName,\n\t\ttheme,\n\t\t...restProps// все остальные пропсы попадут в объект restProps\n\t}\n) => {\n\tconst onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tonChange // если есть пропс onChange\n\t\t&& onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n\t\tonChangeText && onChangeText(e.currentTarget.value);\n\t}\n\tconst onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tonKeyPress && onKeyPress(e);\n\n\t\te.key === \"Enter\" // если нажата кнопка Enter\n\t\t&& onEnter // и есть пропс onEnter\n\t\t&& onEnter(); // то вызвать его\n\t}\n\n\tconst finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n\tconst finalInputClassName = `${error ? s.errorInput : s.superInput} ${theme === 'dark' ? s.dark : s.light}`\n\n\n\treturn (\n\t\t<>\n\t\t\t<input\n\t\t\t\ttype={type ? type : 'text'}\n\t\t\t\tonChange={onChangeCallback}\n\t\t\t\tonKeyPress={onKeyPressCallback}\n\t\t\t\tclassName={finalInputClassName}\n\n\t\t\t\t{...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n\t\t\t/>\n\t\t\t{error && <span className={finalSpanClassName}>{'Please, type something..'}</span>}\n\t\t</>\n\t);\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\nimport s from './SuperButton.module.scss';\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n\tred?: boolean\n\ttheme?: string\n\tclassName?: string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n\t{\n\t\ttheme,\n\t\tred, className,\n\t\t...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n\t}\n) => {\n\tconst finalClassName = `${red ? s.red : s.default} ${theme == 'dark' ? s.dark : s.light} ${className}`;\n\treturn (\n\t\t<button\n\t\t\tclassName={finalClassName}\n\t\t\t{...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n\t\t/>\n\t);\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\nimport s from './SuperCheckbox.module.scss';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n\tonChangeChecked?: (checked: boolean) => void\n\tspanClassName?: string\n\ttheme?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n\t{\n\t\ttheme,\n\t\ttype, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n\t\tonChange, onChangeChecked,\n\t\tclassName, spanClassName,\n\t\tchildren, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n\t\t...restProps// все остальные пропсы попадут в объект restProps\n\t}\n) => {\n\tconst onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n\t\t// сделайте так чтоб работал onChange и onChangeChecked\n\t\tonChange && onChange(e);\n\n\t\tonChangeChecked && onChangeChecked(e.currentTarget.checked)\n\n\t}\n\n\tconst finalInputClassName = `${s.checkbox} ${className ? className : ''} ${theme === 'dark' ? s.dark : s.light}`\n\n\treturn (\n\t\t<label className={s.label}>\n\t\t\t<input\n\t\t\t\ttype={'checkbox'}\n\t\t\t\tonChange={onChangeCallback}\n\t\t\t\tclassName={finalInputClassName}\n\n\t\t\t\t{...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n\t\t\t/>\n\t\t\t{children && <span className={s.spanClassName}>{children}</span>}\n\t\t</label> // благодаря label нажатие на спан передастся в инпут\n\t);\n}\n\nexport default SuperCheckbox;\n","import React, {FC, useState} from 'react';\nimport style from './Login.module.scss'\nimport SuperInputText from '../../06_common/c1-SuperInputText/SuperInputText';\nimport SuperButton from '../../06_common/c2-SuperButton/SuperButton';\nimport {useFormik} from 'formik';\nimport SuperCheckbox from '../../06_common/c3-SuperCheckbox/SuperCheckbox';\nimport {RequestErrorType, RequestStatusType} from '../../../bll/reducers/app-reducer';\nimport { NavLink } from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport {loginTC} from '../../../bll/reducers/login-reducer';\nimport {useDispatch} from 'react-redux';\n\n\ntype LoginPropsType = {\n\ttheme?: string\n\tstatus: RequestStatusType\n\tloginError: RequestErrorType\n}\n\n\ntype  FormikErrorType = {\n\temail?: string\n\tpassword?: string\n\trememberMe?: boolean\n}\n\nexport const Login: FC<LoginPropsType> = ({theme, loginError,status}) => {\n\tconst [disable, setDisable] = useState<boolean>(false)\n\tconst dispatch = useDispatch()\n\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: ''\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormikErrorType = {}\n\t\t\tif (!values.email) {\n\t\t\t\terrors.email = 'Email is required';\n\t\t\t}\n\t\t\tif (!values.password) {\n\t\t\t\terrors.password = 'Password is required';\n\t\t\t}\n\n\t\t\tif (formik.errors.email || formik.errors.password) {\n\t\t\t\tif (Object.keys(errors).length === 0) {\n\t\t\t\t\tsetDisable(false)\n\t\t\t\t} else {\n\t\t\t\t\tsetDisable(true)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tdispatch(loginTC(values))\n\t\t\t// alert(JSON.stringify(values));\n\t\t\tsetDisable(true)\n\t\t\tformik.resetForm()\n\t\t},\n\t})\n\n\n\treturn (\n\t\t<div className={style.loginWrapper}>\n\t\t\t<h1 className={style.loginTitle}>Sign in</h1>\n\t\t\t{loginError ? <div className={style.error}>{loginError}</div> : null}\n\t\t\t<form className={style.loginBox} onSubmit={formik.handleSubmit}>\n\t\t\t\t<div className={style.loginInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='e-mail' type=\"email\"  {...formik.getFieldProps('email')}/>\n\t\t\t\t\t{formik.touched.email && formik.errors.email\n\t\t\t\t\t\t? (<div className={style.error}>{formik.errors.email}</div>)\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className={style.loginInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='password' type=\"password\" {...formik.getFieldProps('password')}/>\n\t\t\t\t\t{formik.touched.password && formik.errors.password\n\t\t\t\t\t\t? <div className={style.error}>{formik.errors.password}</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className={style.loginCheckboxInner}>\n\t\t\t\t\t<label htmlFor='rememberMe' className={style.loginLabel}>Remember me</label>\n\t\t\t\t\t<SuperCheckbox theme={theme}\n\t\t\t\t\t\tid=\"rememberMe\"\n\t\t\t\t\t\ttype=\"rememberMe\"\n\t\t\t\t\t\t{...formik.getFieldProps('rememberMe')}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<SuperButton theme={theme} disabled={disable}>Sign in</SuperButton>\n\t\t\t</form>\n\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`} to={PATH.RECOVERY_PASSWORD}>Forgot your password?</NavLink>\n\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`} to={PATH.REGISTRATION}>Go to sign up</NavLink>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport './Loader.scss';\n\nconst Loader = () => {\n\n\treturn (\n\t\t<div className=\"lds-ellipsis\">\n\t\t\t<div></div>\n\t\t\t<div></div>\n\t\t\t<div></div>\n\t\t\t<div></div>\n\t\t</div>\n\t)\n}\n\nexport default Loader","import React, {FC} from 'react';\nimport {Login} from './Login';\nimport {useSelector} from 'react-redux';\nimport {AppRootState} from '../../../bll/store';\nimport {RequestErrorType, RequestStatusType} from '../../../bll/reducers/app-reducer';\nimport {Redirect} from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport Loader from '../../06_common/c5-Loader/Loader';\n\ntype LoginContainerPropsType = {\n  theme?: string\n}\n\nexport const LoginContainer: FC<LoginContainerPropsType> = ({theme}) => {\n  const isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\n  const status = useSelector<AppRootState, RequestStatusType>(state => state.login.loginStatus)\n  const loginError = useSelector<AppRootState, RequestErrorType>(state => state.login.loginError)\n\n  if (isLoggedIn) return <Redirect to={PATH.PROFILE}/>\n\n  if (status === 'loading') {\n    return <Loader/>\n  }\n\n    return (\n     <>\n       <Login theme={theme} status={status} loginError={loginError}/>\n     </>\n\n    );\n}\n","import React, {FC, useState} from 'react';\nimport style from './Registration.module.scss';\nimport SuperInputText from '../../06_common/c1-SuperInputText/SuperInputText';\nimport SuperButton from '../../06_common/c2-SuperButton/SuperButton';\nimport {useFormik} from 'formik';\nimport {NavLink} from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport {RequestErrorType, RequestStatusType} from '../../../bll/reducers/app-reducer';\nimport {useDispatch} from 'react-redux';\nimport {signUpTC} from '../../../bll/reducers/registration-reducer';\n\n\ntype RegistrationPropsType = {\n\ttheme?: string\n\tstatus: RequestStatusType\n\tregistrationError: RequestErrorType\n}\n\ntype  FormikErrorType = {\n\temail?: string\n\tpassword?: string\n\tconfirmPassword?: string\n}\n\nexport const Registration: FC<RegistrationPropsType> = ({theme, status, registrationError}) => {\n\tconst dispatch = useDispatch();\n\tconst [disable, setDisable] = useState<boolean>(false)\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: ''\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormikErrorType = {}\n\t\t\tif (!values.email) {\n\t\t\t\terrors.email = 'Email is required';\n\t\t\t}\n\t\t\tif (!values.password) {\n\t\t\t\terrors.password = 'Password is required';\n\t\t\t}\n\t\t\tif (!values.confirmPassword) {\n\t\t\t\terrors.confirmPassword = 'Password is required';\n\t\t\t}\n\t\t\tif (values.password !== values.confirmPassword) {\n\t\t\t\terrors.confirmPassword = 'Passwords are not equal';\n\t\t\t}\n\t\t\tif (formik.errors.email || formik.errors.password || formik.errors.confirmPassword) {\n\t\t\t\tif (Object.keys(errors).length === 0) {\n\t\t\t\t\tsetDisable(false)\n\t\t\t\t} else {\n\t\t\t\t\tsetDisable(true)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tdispatch(signUpTC(values))\n\t\t\t// alert(JSON.stringify(values));\n\t\t\tsetDisable(true)\n\t\t\tformik.resetForm()\n\t\t},\n\t})\n\n\n\treturn (\n\t\t<div className={style.regWrapper}>\n\t\t\t<h1 className={style.regTitle}>Sign up</h1>\n\t\t\t<p className={style.regSubTitle}>Please fill in the form below</p>\n\t\t\t{registrationError ? <div className={style.regError}>{registrationError}</div> : null}\n\t\t\t<form className={style.regBox} onSubmit={formik.handleSubmit}>\n\t\t\t\t<div className={style.regInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='e-mail' type=\"email\"  {...formik.getFieldProps('email')}/>\n\t\t\t\t\t{formik.touched.email && formik.errors.email\n\t\t\t\t\t\t? (<div className={style.error}>{formik.errors.email}</div>)\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className={style.regInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='password' type=\"password\" {...formik.getFieldProps('password')}/>\n\t\t\t\t\t{formik.touched.password && formik.errors.password\n\t\t\t\t\t\t? <div className={style.error}>{formik.errors.password}</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className={style.regInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='confirm password'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\" {...formik.getFieldProps('confirmPassword')}/>\n\t\t\t\t\t{formik.touched.confirmPassword && formik.errors.confirmPassword\n\t\t\t\t\t\t? <div className={style.error}>{formik.errors.confirmPassword}</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<SuperButton theme={theme}\n\t\t\t\t\t\t\t\t\t\t disabled={disable}>Sign up</SuperButton>\n\t\t\t</form>\n\n\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`} to={PATH.LOGIN}>Go to sign in</NavLink>\n\t\t</div>\n\t);\n}\n\n","import React, {FC} from 'react';\nimport {Registration} from './Registration';\nimport {Redirect} from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport {useSelector} from 'react-redux';\nimport {AppRootState} from '../../../bll/store';\nimport {RequestErrorType, RequestStatusType} from '../../../bll/reducers/app-reducer';\nimport Loader from '../../06_common/c5-Loader/Loader';\n\n\ntype RegistrationContainerPropsType = {\n\ttheme?: string\n}\n\nexport const RegistrationContainer: FC<RegistrationContainerPropsType> = ({theme}) => {\n\tconst status = useSelector<AppRootState, RequestStatusType>(state => state.app.status)\n\tconst registrationError = useSelector<AppRootState, RequestErrorType>(state => state.registration.registrationError)\n\tconst isRegistration = useSelector<AppRootState, boolean>(state => state.registration.isRegistration)\n\n\tif (isRegistration) {\n\t\treturn <Redirect to={PATH.LOGIN}/>\n\t}\n\n\tif (status === 'loading') {\n\t\treturn <Loader/>\n\t}\n\n\treturn (\n\t\t<Registration\n\t\t\tregistrationError={registrationError}\n\t\t\tstatus={status}\n\t\t\ttheme={theme}\n\t\t/>\n\t)\n};","import React from 'react';\n\n\nexport const Error404 = () => {\n  return (\n    <div>\n        Error404\n    </div>\n  );\n}\n","import React, {FC} from 'react';\nimport s from './PasswordRecovery.module.scss';\nimport {useFormik} from 'formik';\nimport SuperButton from '../../06_common/c2-SuperButton/SuperButton';\nimport SuperInputText from '../../06_common/c1-SuperInputText/SuperInputText';\nimport {RequestStatusType, sendEmailTC} from '../../../bll/reducers/recoveryPassword-reducer';\nimport {useDispatch} from 'react-redux';\nimport Loader from '../../06_common/c5-Loader/Loader';\n\ntype  FormikErrorType = {\n\temail?: string\n}\n\ntype PasswordRecoveryPropsType = {\n\ttheme?: string\n\trecoveryError: string | null\n\trecoverySuccess: string | null\n\tstatus: RequestStatusType\n}\n\nexport const PasswordRecovery: FC<PasswordRecoveryPropsType> = ({theme,recoveryError,recoverySuccess, status}) => {\n\tconst dispatch = useDispatch()\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: '',\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormikErrorType = {}\n\n\t\t\tif (!values.email) {\n\t\t\t\terrors.email = 'Email is required';\n\t\t\t}\n\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tdispatch(sendEmailTC(values.email))\n\t\t\tformik.resetForm()\n\t\t},\n\t})\n\n\n\treturn (\n\t\t<div className={s.box}>\n\t\t\t<h1 className={s.recTitle}>Recover Password</h1>\n\t\t\t<p className={s.recSubTitle}>Please, enter your email</p>\n\t\t\t{recoveryError ? <div className={s.recError}>{recoveryError}</div> : null}\n\t\t\t{recoverySuccess ? <div className={s.recSuccess}>{recoverySuccess}</div> : null}\n\t\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t\t<div className={s.recInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='e-mail' type=\"email\" {...formik.getFieldProps('email')}/>\n\t\t\t\t\t{formik.touched.email && formik.errors.email\n\t\t\t\t\t\t? (<div className={s.recError}>{formik.errors.email}</div>)\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\n\t\t\t\t<SuperButton>Send</SuperButton>\n\t\t\t\t{status === 'loading' ? <Loader /> : null}\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n","import React, {FC} from 'react';\nimport {PasswordRecovery} from './PasswordRecovery';\nimport {useSelector} from 'react-redux';\nimport {AppRootState} from '../../../bll/store';\nimport {RequestErrorType, RequestStatusType} from '../../../bll/reducers/app-reducer';\nimport Loader from '../../06_common/c5-Loader/Loader';\n\ntype PasswordRecoveryContainerPropsType = {\n\ttheme?: string\n}\n\nexport const PasswordRecoveryContainer: FC<PasswordRecoveryContainerPropsType> = ({theme}) => {\n\tconst recoveryError = useSelector<AppRootState, RequestErrorType>(state => state.recoveryPass.recoveryError)\n\tconst recoverySuccess = useSelector<AppRootState, RequestErrorType>(state => state.recoveryPass.recoverySuccess)\n\tconst status = useSelector<AppRootState, RequestStatusType>(state => state.recoveryPass.status)\n\n\n\treturn (\n\t\t<PasswordRecovery theme={theme} recoveryError={recoveryError} recoverySuccess={recoverySuccess} status={status}/>\n\t);\n}\n","import React, {FC} from 'react';\nimport s from './NewPassword.module.scss'\nimport SuperInputText from '../../06_common/c1-SuperInputText/SuperInputText';\nimport SuperButton from '../../06_common/c2-SuperButton/SuperButton';\nimport {useDispatch} from 'react-redux';\nimport {useFormik} from 'formik';\nimport {sendNewPasswordTC} from '../../../bll/reducers/newPassword-reducer';\nimport {useParams} from 'react-router-dom';\nimport Loader from '../../06_common/c5-Loader/Loader';\nimport {RequestStatusType} from '../../../bll/reducers/recoveryPassword-reducer';\n\ntype NewPasswordPropsType = {\n\ttheme?: string\n\tsuccessMessage: string\n\terrorMessage: string\n\tstatus: RequestStatusType\n}\n\ntype FormikErrorType = {\n\tpassword?: string\n\tconfirmPassword?: string\n}\n\ntype ParamTypes = {\n\ttoken: string\n}\n\nexport const NewPassword: FC<NewPasswordPropsType> = ({theme, successMessage,errorMessage,status}) => {\n\tconst dispatch = useDispatch()\n\tconst {token} = useParams<ParamTypes>()\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: ''\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormikErrorType = {}\n\n\t\t\tif (!values.password) {\n\t\t\t\terrors.password = 'Password is required';\n\t\t\t}\n\t\t\tif (!values.confirmPassword) {\n\t\t\t\terrors.confirmPassword = 'Password is required';\n\t\t\t}\n\t\t\tif (values.password !== values.confirmPassword) {\n\t\t\t\terrors.confirmPassword = 'Passwords are not equal';\n\t\t\t}\n\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tdispatch(sendNewPasswordTC(values.password, token))\n\t\t\tformik.resetForm()\n\t\t},\n\t})\n\n\n\treturn (\n\t\t<div className={s.box}>\n\t\t\t<h1 className={s.newPassTitle}>New Password</h1>\n\t\t\t<p className={s.newPassSubTitle}>Please, enter your email</p>\n\t\t\t{errorMessage ? <div className={s.newPassError}>{errorMessage}</div> : null}\n\t\t\t{successMessage ? <div className={s.newPassSuccess}>{successMessage}</div> : null}\n\t\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t\t<div className={s.newPassInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='password' type=\"password\" {...formik.getFieldProps('password')}/>\n\t\t\t\t\t{formik.touched.password && formik.errors.password\n\t\t\t\t\t\t? <div className={s.newPassError}>{formik.errors.password}</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className={s.newPassInner}>\n\t\t\t\t\t<SuperInputText theme={theme} placeholder='confirm password'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\" {...formik.getFieldProps('confirmPassword')}/>\n\t\t\t\t\t{formik.touched.confirmPassword && formik.errors.confirmPassword\n\t\t\t\t\t\t? <div className={s.newPassError}>{formik.errors.confirmPassword}</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<SuperButton>Send</SuperButton>\n\t\t\t\t{status === 'loading' ? <Loader /> : null}\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n","import React, {FC} from 'react';\nimport {NewPassword} from './NewPassword';\nimport {useSelector} from 'react-redux';\nimport {AppRootState} from '../../../bll/store';\nimport {RequestStatusType} from '../../../bll/reducers/app-reducer';\nimport Loader from '../../06_common/c5-Loader/Loader';\n\n\ntype NewPasswordContainerPropsType = {\n  theme?: string\n}\n\nexport const NewPasswordContainer:FC<NewPasswordContainerPropsType> = ({theme}) => {\n  const status = useSelector<AppRootState, RequestStatusType>(state => state.newPassword.status)\n  const successMessage = useSelector<AppRootState, string>(state => state.newPassword.successMessage)\n  const errorMessage = useSelector<AppRootState, string>(state => state.newPassword.error)\n\n\n  return (\n    <>\n      <NewPassword theme={theme} successMessage={successMessage} errorMessage={errorMessage} status={status}/>\n    </>\n  );\n}\n","import React from 'react';\nimport s from './Packs.module.scss'\n\n\nexport const Packs = () => {\n\n\n\treturn (\n\t\t<div className={s.packsBox}>\n\t\t\t<h1>Packs</h1>\n\n\n\t\t</div>\n\t)\n}","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppRootState} from '../../../bll/store';\nimport {Redirect} from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport {Packs} from './Packs';\nimport {getPacksTC, PackType} from '../../../bll/reducers/packs-reducer';\nimport {setIdProfileAC} from '../../../bll/reducers/profile-reducer';\n\n\nexport const PacksContainer = () => {\n\tconst dispatch = useDispatch()\n\tconst isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\n\tconst packs = useSelector<AppRootState, Array<PackType>>(state => state.packs.packs)\n\n\n\n\tuseEffect(() => {\n\t\tdispatch(setIdProfileAC(null))\n\t\tdispatch(getPacksTC())\n\t}, [dispatch])\n\n\tif (!isLoggedIn) {\n\t\treturn <Redirect to={PATH.LOGIN}/>\n\t}\n\n\tconsole.log(packs)\n\n\treturn (\n\t\t<Packs />\n\t)\n}\n\n","import React, {FC} from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {ProfileContainer} from '../04_profile/ProfileContainer';\nimport {Test} from '../test/Test';\nimport {Cards} from '../03_packs/Cards/Cards';\nimport {LoginContainer} from '../02_auth/q1-login/LoginContainer';\nimport {RegistrationContainer} from '../02_auth/q3-registration/RegistrationContainer';\nimport {Error404} from '../06_common/c4-Error404/Error404';\nimport {PasswordRecoveryContainer} from '../02_auth/q4-passwordRecovery/PasswordRecoveryContainer';\nimport {NewPasswordContainer} from '../02_auth/q5-newPassword/NewPasswordContainer';\nimport {PacksContainer} from '../03_packs/Packs/PacksContainer';\n\nexport const PATH = {\n\tLOGIN: '/login',\n\tREGISTRATION: '/registration',\n\tPROFILE: '/profile',\n\tERROR_404: '/404',\n\tRECOVERY_PASSWORD: '/recovery_pass',\n\tNEW_PASSWORD: '/new_pass',\n\tTEST: '/test',\n\tPACKS: '/packs',\n\tCARDS: '/cards'\n}\n\ntype RoutesPropsType = {\n\ttheme?: string\n}\n\nexport const Routes: FC<RoutesPropsType> = ({theme}) => {\n\treturn (\n\t\t<div>\n\t\t\t<Switch>\n\t\t\t\t<Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\n\t\t\t\t<Route path={PATH.LOGIN} render={() => <LoginContainer theme={theme}/>}/>\n\t\t\t\t<Route path={PATH.REGISTRATION} render={() => <RegistrationContainer theme={theme}/>}/>\n\t\t\t\t<Route path={PATH.PROFILE} render={() => <ProfileContainer/>}/>\n\t\t\t\t<Route path={PATH.ERROR_404} render={() => <Error404/>}/>\n\t\t\t\t<Route path={PATH.RECOVERY_PASSWORD} render={() => <PasswordRecoveryContainer theme={theme}/>}/>\n\t\t\t\t<Route path={PATH.NEW_PASSWORD} render={() => <NewPasswordContainer theme={theme}/>}/>\n\t\t\t\t<Route path={PATH.TEST} render={() => <Test/>}/>\n\t\t\t\t<Route path={PATH.PACKS} render={() => <PacksContainer/>}/>\n\t\t\t\t<Route path={PATH.CARDS + `/:id`} render={() => <Cards/>}/>\n\t\t\t\t<Route render={() => <Error404/>}/>\n\t\t\t</Switch>\n\t\t</div>\n\t)\n}\n","import React, {useCallback} from 'react';\nimport s from './Logout.module.scss';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {logoutTC} from '../../../bll/reducers/login-reducer';\nimport {AppRootState} from '../../../bll/store';\nimport SuperButton from '../../06_common/c2-SuperButton/SuperButton';\nimport {RequestStatusType} from '../../../bll/reducers/app-reducer';\nimport Loader from '../../06_common/c5-Loader/Loader';\n\nexport const Logout = () => {\n\tconst isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\n\tconst status = useSelector<AppRootState, RequestStatusType>(state => state.login.logoutStatus)\n\tconst dispatch = useDispatch()\n\n\n\tconst logOutHandler = useCallback(() => {\n\t\tdispatch(logoutTC())\n\t}, [dispatch])\n\n\n\treturn (\n\t\t<>\n\t\t\t{status === 'loading' ? <Loader/> : null}\n\t\t\t{isLoggedIn && <SuperButton onClick={logOutHandler} className={s.logout}>Logout</SuperButton>}\n\t\t</>\n\t)\n}","import React from 'react';\nimport {NavLink, Redirect} from 'react-router-dom';\nimport {PATH} from '../../05_routes/Routes';\nimport style from './Header.module.scss'\nimport {Logout} from '../../02_auth/q2-logout/Logout';\n\ntype MenuType = {\n\ttheme?: string\n}\n\nexport const Header: React.FC<MenuType> = ({theme}) => {\n\n\n\treturn (\n\t\t<nav className={style.navBox}>\n\t\t\t<ul className={style.navList}>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink activeClassName={style.selected}\n\t\t\t\t\t\t\t\t\t className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t to={PATH.REGISTRATION}>Registration</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.LOGIN}>Login</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.PROFILE}>Profile</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.RECOVERY_PASSWORD}>Recovery Password</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.NEW_PASSWORD}>New Password</NavLink>\n\t\t\t\t</li>\n\n\t\t\t\t<li className={style.navItem}>\n\t\t\t\t\t<NavLink className={`${style.link} ${theme === 'dark' ? style.dark : style.light}`}\n\t\t\t\t\t\t\t\t\t activeClassName={style.selected} to={PATH.PACKS}>Packs</NavLink>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<Logout />\n\t\t\t{/*<div className={style.navItem}>*/}\n\t\t\t{/*    <NavLink className={style.link} to={PATH.CARDS}>Cards</NavLink>*/}\n\t\t\t{/*</div>*/}\n\t\t</nav>\n\t)\n}\n","import React, {FC} from 'react';\nimport SuperButton from '../c2-SuperButton/SuperButton';\nimport s from './Theme.module.scss';\n\ntype ThemePropsType = {\n\ttheme: string\n\ttoggleTheme: () => void\n}\n\nexport const Theme: FC<ThemePropsType> = ({theme, toggleTheme}) => {\n\treturn (\n\t\t<div className={s.btnBox}>\n\t\t\t<SuperButton onClick={toggleTheme}\n\t\t\t\t\t\t\t\t\t className={`${s.switcherBtn} ${theme === 'dark' ? s.dark : s.light}`}>{theme === 'dark' ?\n\t\t\t\t<span className={s.emoji}>&#127770;</span> : <span className={s.emoji}>&#127773;</span>}</SuperButton>\n\t\t</div>\n\t)\n}","import React from 'react';\nimport s from './Initializing.module.scss'\n\nexport const InitializingLoader = () => {\n\treturn (\n\t\t<div className={s.loader}>\n\t\t\t<div className={`${s.inner} ${s.one}`}></div>\n\t\t\t<div className={`${s.inner} ${s.two}`}></div>\n\t\t\t<div className={`${s.inner} ${s.three}`}></div>\n\t\t</div>\n\n\t)\n}","import React, {useEffect} from 'react';\nimport s from './App.module.scss';\nimport useTheme from '../../../utils/hooks/useTheme';\nimport {Routes} from '../../05_routes/Routes';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppRootState} from '../../../bll/store';\nimport {Header} from '../v2-Header/Header';\nimport {Theme} from '../../06_common/c12-Theme/Theme';\nimport {initializeAppTC} from '../../../bll/reducers/app-reducer';\nimport {InitializingLoader} from '../../06_common/c13-Initializing/Initializing';\n\nfunction App() {\n\tconst {theme, toggleTheme} = useTheme();\n\tconst dispatch = useDispatch()\n\tconst initialized = useSelector<AppRootState, boolean>(state => state.app.initialized)\n\n\tconsole.log(initialized, 'initialized')\n\n\tuseEffect(() => {\n\t\tif (!initialized) {\n\t\t\tdispatch(initializeAppTC())\n\t\t}\n\t}, [initialized, dispatch])\n\n\n\tif (!initialized ) {\n\t\treturn <InitializingLoader />\n\t}\n\n\n\treturn (\n\t\t<div className={`${s.app} ${theme === 'dark' ? s.dark : s.light}`}>\n\t\t\t<div className={s.container}>\n\t\t\t\t<Theme theme={theme} toggleTheme={toggleTheme}/>\n\t\t\t\t<Header theme={theme}/>\n\t\t\t\t<Routes theme={theme}/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nexport default () => {\n\tconst [theme, setTheme] = useState(\"light\");\n\tconst toggleTheme = () => {\n\t\tif (theme !== \"dark\") {\n\t\t\tlocalStorage.setItem(\"theme\", \"dark\");\n\t\t\tsetTheme(\"dark\");\n\t\t} else {\n\t\t\tlocalStorage.setItem(\"theme\", \"light\");\n\t\t\tsetTheme(\"light\");\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst localTheme = localStorage.getItem(\"theme\");\n\t\tif (localTheme) {\n\t\t\tsetTheme(localTheme);\n\t\t}\n\t}, []);\n\n\treturn {\n\t\ttheme,\n\t\ttoggleTheme\n\t};\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './bll/store';\nimport App from './ui/01_app/v1-App/App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App/>\n\t\t\t</Provider>\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}